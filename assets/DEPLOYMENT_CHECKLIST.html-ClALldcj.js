import{_ as c,c as t,a as p,b as a,d as e,w as l,r,o as d,e as i}from"./app-B1ZHZUkk.js";const o={};function m(u,s){const n=r("RouteLink");return d(),t("div",null,[s[4]||(s[4]=p(`<h1 id="docker-镜像直接拉取部署-快速验证清单" tabindex="-1"><a class="header-anchor" href="#docker-镜像直接拉取部署-快速验证清单"><span>Docker 镜像直接拉取部署 - 快速验证清单</span></a></h1><h2 id="📋-部署验证清单" tabindex="-1"><a class="header-anchor" href="#📋-部署验证清单"><span>📋 部署验证清单</span></a></h2><p>在使用新的直接拉取部署方案之前，请确认以下项目：</p><h3 id="✅-系统要求" tabindex="-1"><a class="header-anchor" href="#✅-系统要求"><span>✅ 系统要求</span></a></h3><ul><li>[ ] Docker 已安装并运行</li><li>[ ] 端口 5000 未被占用</li><li>[ ] 具有互联网连接（用于拉取镜像）</li></ul><h3 id="✅-部署步骤验证" tabindex="-1"><a class="header-anchor" href="#✅-部署步骤验证"><span>✅ 部署步骤验证</span></a></h3><h4 id="方式一-一键脚本部署" tabindex="-1"><a class="header-anchor" href="#方式一-一键脚本部署"><span>方式一：一键脚本部署</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Linux/macOS</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-o</span> deploy.sh https://raw.githubusercontent.com/leletxh/CABM/main/deploy.sh</span>
<span class="line"><span class="token function">chmod</span> +x deploy.sh</span>
<span class="line">./deploy.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line"><span class="token comment"># Windows PowerShell</span></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>Uri <span class="token string">&quot;https://raw.githubusercontent.com/leletxh/CABM/main/deploy.ps1&quot;</span> <span class="token operator">-</span>OutFile <span class="token string">&quot;deploy.ps1&quot;</span></span>
<span class="line">PowerShell <span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>File deploy<span class="token punctuation">.</span>ps1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式二-手动-docker-命令" tabindex="-1"><a class="header-anchor" href="#方式二-手动-docker-命令"><span>方式二：手动 Docker 命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 1. 创建工作目录和配置</span></span>
<span class="line"><span class="token function">mkdir</span> cabm-app <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> cabm-app</span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> data static/images/cache static/audio</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 创建 .env 文件（参考 .env.example）</span></span>
<span class="line"><span class="token comment"># 3. 运行容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> cabm-app <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token punctuation">\\</span></span>
<span class="line">  --env-file .env <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/data:/app/data <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/static/images/cache:/app/static/images/cache <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/static/audio:/app/static/audio <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--restart</span> unless-stopped <span class="token punctuation">\\</span></span>
<span class="line">  ghcr.io/leletxh/cabm:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式三-docker-compose" tabindex="-1"><a class="header-anchor" href="#方式三-docker-compose"><span>方式三：Docker Compose</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用提供的 docker-compose.yml</span></span>
<span class="line"><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="✅-部署后验证" tabindex="-1"><a class="header-anchor" href="#✅-部署后验证"><span>✅ 部署后验证</span></a></h3><ul><li>[ ] 容器成功启动：<code>docker ps | grep cabm-app</code></li><li>[ ] 应用可访问：打开 http://localhost:5000</li><li>[ ] 日志无错误：<code>docker logs cabm-app</code></li><li>[ ] API 配置正确：能够正常聊天和生成图片</li></ul><h3 id="✅-功能测试" tabindex="-1"><a class="header-anchor" href="#✅-功能测试"><span>✅ 功能测试</span></a></h3><ul><li>[ ] 基本对话功能</li><li>[ ] 图片生成功能</li><li>[ ] 角色切换功能</li><li>[ ] 记忆系统功能（可选）</li><li>[ ] TTS 语音功能（可选）</li></ul><h3 id="🔧-故障排除" tabindex="-1"><a class="header-anchor" href="#🔧-故障排除"><span>🔧 故障排除</span></a></h3><p>如果遇到问题，请检查：</p><ol><li><code>.env</code> 文件中的 API 密钥是否正确</li><li>网络连接是否正常</li><li>Docker 服务是否运行</li><li>端口是否被占用</li><li>查看详细日志：<code>docker logs -f cabm-app</code></li></ol><h3 id="📚-相关文档" tabindex="-1"><a class="header-anchor" href="#📚-相关文档"><span>📚 相关文档</span></a></h3>`,21)),a("ul",null,[a("li",null,[e(n,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:l(()=>s[0]||(s[0]=[i("Docker 镜像直接拉取部署指南",-1)])),_:1,__:[0]})]),a("li",null,[e(n,{to:"/deploy-docs/DOCKER_DEPLOY_GUIDE.html"},{default:l(()=>s[1]||(s[1]=[i("Docker 部署指南",-1)])),_:1,__:[1]})]),a("li",null,[e(n,{to:"/deploy-docs/WINDOWS_DEPLOY_GUIDE.html"},{default:l(()=>s[2]||(s[2]=[i("Windows 部署指南",-1)])),_:1,__:[2]})]),a("li",null,[e(n,{to:"/deploy-docs/DOCKER_SOLUTION.html"},{default:l(()=>s[3]||(s[3]=[i("故障排除指南",-1)])),_:1,__:[3]})])]),s[5]||(s[5]=p(`<hr><h2 id="🚀-快速命令参考" tabindex="-1"><a class="header-anchor" href="#🚀-快速命令参考"><span>🚀 快速命令参考</span></a></h2><h3 id="容器管理" tabindex="-1"><a class="header-anchor" href="#容器管理"><span>容器管理</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 查看状态</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看日志</span></span>
<span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> cabm-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重启容器</span></span>
<span class="line"><span class="token function">docker</span> restart cabm-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 停止容器</span></span>
<span class="line"><span class="token function">docker</span> stop cabm-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除容器</span></span>
<span class="line"><span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> cabm-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新镜像</span></span>
<span class="line"><span class="token function">docker</span> pull ghcr.io/leletxh/cabm:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据管理" tabindex="-1"><a class="header-anchor" href="#数据管理"><span>数据管理</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 备份数据</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-czf</span> cabm-backup-<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%Y%m%d<span class="token variable">)</span></span>.tar.gz data/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 恢复数据</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-xzf</span> cabm-backup-YYYYMMDD.tar.gz</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="系统监控" tabindex="-1"><a class="header-anchor" href="#系统监控"><span>系统监控</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 查看资源使用</span></span>
<span class="line"><span class="token function">docker</span> stats cabm-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看端口占用</span></span>
<span class="line"><span class="token function">netstat</span> <span class="token parameter variable">-tlnp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">5000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查磁盘空间</span></span>
<span class="line"><span class="token function">df</span> <span class="token parameter variable">-h</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const h=c(o,[["render",m]]),b=JSON.parse('{"path":"/deploy-docs/DEPLOYMENT_CHECKLIST.html","title":"Docker 镜像直接拉取部署 - 快速验证清单","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📋 部署验证清单","slug":"📋-部署验证清单","link":"#📋-部署验证清单","children":[{"level":3,"title":"✅ 系统要求","slug":"✅-系统要求","link":"#✅-系统要求","children":[]},{"level":3,"title":"✅ 部署步骤验证","slug":"✅-部署步骤验证","link":"#✅-部署步骤验证","children":[]},{"level":3,"title":"✅ 部署后验证","slug":"✅-部署后验证","link":"#✅-部署后验证","children":[]},{"level":3,"title":"✅ 功能测试","slug":"✅-功能测试","link":"#✅-功能测试","children":[]},{"level":3,"title":"🔧 故障排除","slug":"🔧-故障排除","link":"#🔧-故障排除","children":[]},{"level":3,"title":"📚 相关文档","slug":"📚-相关文档","link":"#📚-相关文档","children":[]}]},{"level":2,"title":"🚀 快速命令参考","slug":"🚀-快速命令参考","link":"#🚀-快速命令参考","children":[{"level":3,"title":"容器管理","slug":"容器管理","link":"#容器管理","children":[]},{"level":3,"title":"数据管理","slug":"数据管理","link":"#数据管理","children":[]},{"level":3,"title":"系统监控","slug":"系统监控","link":"#系统监控","children":[]}]}],"git":{"updatedTime":1754306992000,"contributors":[{"name":"2302_76329346","username":"","email":"2302_76329346@noreply.gitcode.com","commits":1}],"changelog":[{"hash":"f9c61434bda4cac85d5b9c782b7743cb86d12af5","time":1754306992000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"chore: initialize package.json with project metadata and development dependencies"}]},"filePathRelative":"deploy-docs/DEPLOYMENT_CHECKLIST.md"}');export{h as comp,b as data};
