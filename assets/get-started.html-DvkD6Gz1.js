import{_ as d,c as r,a as p,b as n,d as l,w as e,e as a,r as o,o as c}from"./app-DWWa266Z.js";const u={},m={class:"table-of-contents"},v={id:"如果你的显卡较好推荐使用gpt-sovits语音合成",tabindex:"-1"},h={class:"header-anchor",href:"#如果你的显卡较好推荐使用gpt-sovits语音合成"},b={id:"硅基流动的详细使用说明",tabindex:"-1"},x={class:"header-anchor",href:"#硅基流动的详细使用说明"};function k(g,s){const i=o("router-link"),t=o("RouteLink");return c(),r("div",null,[s[45]||(s[45]=p('<h1 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h1><p>&quot;当灵性注入载体，它便挣脱物质躯壳，抵达超验之境。&quot;</p><p><s>（不就是个Gal吗）</s></p><blockquote><h2 id="⚠️-注意-本项目目前处于开发阶段-核心功能尚未实现-其他的功能和优化也正在进行中。欢迎贡献代码或提出建议。" tabindex="-1"><a class="header-anchor" href="#⚠️-注意-本项目目前处于开发阶段-核心功能尚未实现-其他的功能和优化也正在进行中。欢迎贡献代码或提出建议。"><span><strong>⚠️ 注意：本项目目前处于开发阶段，核心功能尚未实现，其他的功能和优化也正在进行中。欢迎贡献代码或提出建议。</strong></span></a></h2></blockquote><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2>',5)),n("nav",m,[n("ul",null,[n("li",null,[l(i,{to:"#目录"},{default:e(()=>s[0]||(s[0]=[a("目录",-1)])),_:1,__:[0]})]),n("li",null,[l(i,{to:"#开发状态"},{default:e(()=>s[1]||(s[1]=[a("开发状态",-1)])),_:1,__:[1]})]),n("li",null,[l(i,{to:"#项目简介"},{default:e(()=>s[2]||(s[2]=[a("项目简介",-1)])),_:1,__:[2]})]),n("li",null,[l(i,{to:"#声明"},{default:e(()=>s[3]||(s[3]=[a("声明",-1)])),_:1,__:[3]})]),n("li",null,[l(i,{to:"#功能特点"},{default:e(()=>s[4]||(s[4]=[a("功能特点",-1)])),_:1,__:[4]})]),n("li",null,[l(i,{to:"#安装说明"},{default:e(()=>s[5]||(s[5]=[a("安装说明",-1)])),_:1,__:[5]}),n("ul",null,[n("li",null,[l(i,{to:"#🐳-docker-快速部署-推荐"},{default:e(()=>s[6]||(s[6]=[a("🐳 Docker 快速部署（推荐）",-1)])),_:1,__:[6]})]),n("li",null,[l(i,{to:"#📦-传统安装方式"},{default:e(()=>s[7]||(s[7]=[a("📦 传统安装方式",-1)])),_:1,__:[7]})]),n("li",null,[l(i,{to:"#🚀-docker-优势"},{default:e(()=>s[8]||(s[8]=[a("🚀 Docker 优势",-1)])),_:1,__:[8]})]),n("li",null,[l(i,{to:"#📋-环境要求"},{default:e(()=>s[9]||(s[9]=[a("📋 环境要求",-1)])),_:1,__:[9]})])])]),n("li",null,[l(i,{to:"#使用说明"},{default:e(()=>s[10]||(s[10]=[a("使用说明",-1)])),_:1,__:[10]}),n("ul",null,[n("li",null,[l(i,{to:"#启动应用"},{default:e(()=>s[11]||(s[11]=[a("启动应用",-1)])),_:1,__:[11]})]),n("li",null,[l(i,{to:"#基本操作"},{default:e(()=>s[12]||(s[12]=[a("基本操作",-1)])),_:1,__:[12]})])])]),n("li",null,[l(i,{to:"#注意事项"},{default:e(()=>s[13]||(s[13]=[a("注意事项",-1)])),_:1,__:[13]})]),n("li",null,[l(i,{to:"#自定义角色"},{default:e(()=>s[14]||(s[14]=[a("自定义角色",-1)])),_:1,__:[14]})]),n("li",null,[l(i,{to:"#贡献-按周结算没有并不代表没有"},{default:e(()=>s[15]||(s[15]=[a("贡献，按周结算没有并不代表没有",-1)])),_:1,__:[15]})]),n("li",null,[l(i,{to:"#📚-文档索引"},{default:e(()=>s[16]||(s[16]=[a("📚 文档索引",-1)])),_:1,__:[16]}),n("ul",null,[n("li",null,[l(i,{to:"#部署文档"},{default:e(()=>s[17]||(s[17]=[a("部署文档",-1)])),_:1,__:[17]})]),n("li",null,[l(i,{to:"#功能文档"},{default:e(()=>s[18]||(s[18]=[a("功能文档",-1)])),_:1,__:[18]})]),n("li",null,[l(i,{to:"#开发文档"},{default:e(()=>s[19]||(s[19]=[a("开发文档",-1)])),_:1,__:[19]})])])]),n("li",null,[l(i,{to:"#许可证"},{default:e(()=>s[20]||(s[20]=[a("许可证",-1)])),_:1,__:[20]})])])]),s[46]||(s[46]=p(`<h2 id="开发状态" tabindex="-1"><a class="header-anchor" href="#开发状态"><span>开发状态</span></a></h2><p><strong>已完成功能：</strong></p><ul><li>基本的AI对话功能，包含最近的历史记录</li><li>前端的主页面（但是极简风）</li><li>角色系统（可切换不同角色）</li><li>分段流式输出（灵魂所在~）</li><li>记忆系统（使用向量数据库长期保存记忆）</li><li>AI生成选项</li><li>角色的表情（后面或许会换成3D模型）</li><li><s>语音输入</s>（问题太多了，目前几乎用不了）</li><li>很多的bug</li></ul><p><strong>正在开发：</strong></p><ul><li>用户画像（角色对用户的印象）</li><li>场景切换（让AI切换场景或生成新场景）</li><li>故事模式（根据大纲推动故事发展，区别于“闲聊模式”）</li><li>角色的自我认知</li><li>角色动作</li><li>更多的角色</li><li><s>记忆权重，记忆遗忘</s>（意义不大，暂不考虑）</li><li>更多的bug</li></ul><h2 id="项目简介" tabindex="-1"><a class="header-anchor" href="#项目简介"><span>项目简介</span></a></h2><p>CABM是一个AI对话应用，具有动态生成的背景图片功能。用户可以与AI模型进行对话交流，同时应用会使用图像生成模型创建的图片作为动态背景，提供更丰富的视觉体验。应用支持多角色系统，可以切换不同的AI角色进行对话。</p><p><s>人话：AI驱动的Galgame</s></p><h2 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h2><ul><li>本项目为个人非营利性兴趣项目，无意且不参与任何形式的同业竞争。</li><li>本项目采用GNU通用公共许可证(GPL)开源协议，禁止闭源商业化改造。详见<a href="LICENSE">GNU General Public License v3.0</a></li><li>使用者需自行承担因调用第三方AI服务产生的API费用，此类费用与项目作者无关</li><li>本项目涉及人工智能生成内容，作者不对AI生成内容的准确性、合法性及可能引发的后果承担任何责任。</li><li>欢迎提出建设性意见或提交Pull Requests，但作者保留是否采纳的最终决定权，建议提前和作者联系。</li><li>作者保留对本声明条款的最终解释权及修改权。</li></ul><h2 id="功能特点" tabindex="-1"><a class="header-anchor" href="#功能特点"><span>功能特点</span></a></h2><ul><li>与AI模型进行自然对话，支持流式输出（打字机效果）</li><li>多角色系统，可切换不同的AI角色</li><li>动态生成背景图片，提供沉浸式体验</li><li>角色立绘显示，增强视觉效果</li><li>对话历史记录查看</li><li>响应式设计，适配不同设备</li></ul><h2 id="安装说明" tabindex="-1"><a class="header-anchor" href="#安装说明"><span>安装说明</span></a></h2><h3 id="🐳-docker-快速部署-推荐" tabindex="-1"><a class="header-anchor" href="#🐳-docker-快速部署-推荐"><span>🐳 Docker 快速部署（推荐）</span></a></h3><h4 id="🚀-直接拉取镜像部署-最简单" tabindex="-1"><a class="header-anchor" href="#🚀-直接拉取镜像部署-最简单"><span>🚀 直接拉取镜像部署（最简单）</span></a></h4><p>无需克隆代码，直接使用预构建镜像：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Linux/macOS 一键部署</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-o</span> deploy.sh https://raw.githubusercontent.com/leletxh/CABM/main/deploy.sh</span>
<span class="line highlighted"><span class="token function">chmod</span> +x deploy.sh</span>
<span class="line">./deploy.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line"><span class="token comment"># Windows PowerShell 一键部署</span></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>Uri <span class="token string">&quot;https://raw.githubusercontent.com/leletxh/CABM/main/deploy.ps1&quot;</span> <span class="token operator">-</span>OutFile <span class="token string">&quot;deploy.ps1&quot;</span></span>
<span class="line">PowerShell <span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>File deploy<span class="token punctuation">.</span>ps1</span>
<span class="line highlighted"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18)),n("p",null,[n("strong",null,[l(t,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:e(()=>s[21]||(s[21]=[a("📖 Docker 镜像直接拉取部署指南",-1)])),_:1,__:[21]})])]),s[47]||(s[47]=p(`<h4 id="源码构建部署" tabindex="-1"><a class="header-anchor" href="#源码构建部署"><span>源码构建部署</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 克隆项目</span></span>
<span class="line"><span class="token function">git</span> clone https://github.com/leletxh/CABM.git</span>
<span class="line"><span class="token builtin class-name">cd</span> CABM</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 一键部署</span></span>
<span class="line highlighted">./deploy.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="手动部署" tabindex="-1"><a class="header-anchor" href="#手动部署"><span>手动部署</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 1. 配置环境变量</span></span>
<span class="line"><span class="token function">cp</span> .env.docker .env.docker</span>
<span class="line"><span class="token comment"># 编辑 .env.docker 文件，填入你的 API 密钥</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 启动服务</span></span>
<span class="line highlighted">./docker-start.sh start</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 访问应用</span></span>
<span class="line"><span class="token comment"># http://localhost:5000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>更多部署选项：</strong></p>`,5)),n("ul",null,[n("li",null,[l(t,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:e(()=>s[22]||(s[22]=[a("📖 Docker 镜像直接拉取部署指南",-1)])),_:1,__:[22]})]),n("li",null,[l(t,{to:"/deploy-docs/DOCKER_DEPLOYMENT.html"},{default:e(()=>s[23]||(s[23]=[a("详细的部署指南",-1)])),_:1,__:[23]})]),n("li",null,[l(t,{to:"/deploy-docs/DOCKER_SOLUTION.html"},{default:e(()=>s[24]||(s[24]=[a("问题解决方案",-1)])),_:1,__:[24]})])]),s[48]||(s[48]=p(`<h4 id="docker-管理命令" tabindex="-1"><a class="header-anchor" href="#docker-管理命令"><span>Docker 管理命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./docker-start.sh start      <span class="token comment"># 启动服务</span></span>
<span class="line">./docker-start.sh stop       <span class="token comment"># 停止服务</span></span>
<span class="line">./docker-start.sh restart    <span class="token comment"># 重启服务</span></span>
<span class="line">./docker-start.sh logs       <span class="token comment"># 查看日志</span></span>
<span class="line">./docker-start.sh status     <span class="token comment"># 查看状态</span></span>
<span class="line">./docker-start.sh package    <span class="token comment"># 打包镜像</span></span>
<span class="line">./docker-start.sh cleanup    <span class="token comment"># 清理资源</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="📦-传统安装方式" tabindex="-1"><a class="header-anchor" href="#📦-传统安装方式"><span>📦 传统安装方式</span></a></h3><h4 id="_1-安装依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装依赖"><span>1. 安装依赖</span></a></h4><p>使用 pip 安装项目依赖：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-配置环境变量"><span>2. 配置环境变量</span></a></h4><p>复制<code>.env.example</code>文件为<code>.env</code>，并填写API密钥和URL：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>编辑<code>.env</code>文件，填写API_KEY。 需前往<a href="https://cloud.siliconflow.cn/i/mVqMyTZk" target="_blank" rel="noopener noreferrer">硅基流动平台</a>申请你的API Key； 如果使用其他平台或模型，需要替换对应的API_BASE_URL和MODEL</p><p>编辑<code>.env</code>文件，填写以下信息：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 对话API配置</span>
<span class="line">CHAT_API_BASE_URL=https://api.siliconflow.cn/v1</span>
<span class="line highlighted">CHAT_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
<span class="line">CHAT_MODEL=deepseek-ai/DeepSeek-V3</span>
<span class="line"></span>
<span class="line"># 图像生成API配置</span>
<span class="line">IMAGE_API_BASE_URL=https://api.siliconflow.cn/v1</span>
<span class="line highlighted">IMAGE_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
<span class="line">IMAGE_MODEL=Kwai-Kolors/Kolors</span>
<span class="line"></span>
<span class="line"># 嵌入向量API配置</span>
<span class="line">EMBEDDING_API_BASE_URL=https://api.siliconflow.cn/v1</span>
<span class="line highlighted">EMBEDDING_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
<span class="line">EMBEDDING_MODEL=BAAI/bge-m3</span>
<span class="line"></span>
<span class="line"># 选项生成API配置</span>
<span class="line">OPTION_API_BASE_URL=https://api.siliconflow.cn/v1</span>
<span class="line highlighted">OPTION_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
<span class="line">OPTION_MODEL=Qwen/Qwen3-32B</span>
<span class="line"></span>
<span class="line"># TTS服务配置，使用siliconflow必须将参考音频放入static/audio目录下</span>
<span class="line"># 参考音频文件名为：{角色名}.wav将参考文本放到{角色名}.txt</span>
<span class="line">TTS_SERVICE_URL_GPTSoVITS=http://127.0.0.1:9880</span>
<span class="line">TTS_SERVICE_URL_SiliconFlow=https://api.siliconflow.cn/v1</span>
<span class="line highlighted">TTS_SERVICE_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
<span class="line">#填写siliconflow或GPT-SoVITS</span>
<span class="line">TTS_SERVICE_METHOD=siliconflow</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>高亮为必须配置，不配置会影响使用</p><p>第25行在选择GPT-SoVITS可以不用配置</p>`,14)),n("h4",v,[n("a",h,[n("span",null,[s[26]||(s[26]=a("如果你的显卡较好推荐",-1)),l(t,{to:"/deploy-docs/TTS_GPTSoVITS.html"},{default:e(()=>s[25]||(s[25]=[a("使用GPT-SoVITS语音合成",-1)])),_:1,__:[25]})])])]),n("h4",b,[n("a",x,[n("span",null,[l(t,{to:"/deploy-docs/TTS_SIL.html"},{default:e(()=>s[27]||(s[27]=[a("硅基流动的详细使用说明",-1)])),_:1,__:[27]})])])]),s[49]||(s[49]=p(`<h3 id="🚀-docker-优势" tabindex="-1"><a class="header-anchor" href="#🚀-docker-优势"><span>🚀 Docker 优势</span></a></h3><ul><li><strong>一键部署</strong>：无需手动安装依赖，自动配置环境</li><li><strong>环境隔离</strong>：避免与其他应用冲突</li><li><strong>跨平台</strong>：支持 Linux、Windows、macOS</li><li><strong>易于管理</strong>：统一的启动、停止、重启命令</li><li><strong>生产就绪</strong>：包含健康检查和自动重启</li><li><strong>资源限制</strong>：可控制内存和CPU使用</li></ul><h3 id="📋-环境要求" tabindex="-1"><a class="header-anchor" href="#📋-环境要求"><span>📋 环境要求</span></a></h3><h4 id="docker-环境" tabindex="-1"><a class="header-anchor" href="#docker-环境"><span>Docker 环境</span></a></h4><ul><li>Docker 20.10+</li><li>Docker Compose 2.0+</li><li>2GB+ 可用内存</li><li>1GB+ 可用存储空间</li></ul><h4 id="传统环境" tabindex="-1"><a class="header-anchor" href="#传统环境"><span>传统环境</span></a></h4><ul><li>Python 3.8+</li><li>硬盘空间 500MB+</li><li>网络连接（用于API调用）</li></ul><h2 id="使用说明" tabindex="-1"><a class="header-anchor" href="#使用说明"><span>使用说明</span></a></h2><h3 id="启动应用" tabindex="-1"><a class="header-anchor" href="#启动应用"><span>启动应用</span></a></h3><h4 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h4><p>双击 <code>start.bat</code> 文件或在命令行中运行：</p><div class="language-cmd line-numbers-mode" data-highlighter="prismjs" data-ext="cmd"><pre><code><span class="line">start.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="linux-macos" tabindex="-1"><a class="header-anchor" href="#linux-macos"><span>Linux/macOS</span></a></h4><p>确保脚本有执行权限：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">chmod</span> +x start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后运行：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="高级选项" tabindex="-1"><a class="header-anchor" href="#高级选项"><span>高级选项</span></a></h4><p>你也可以直接使用Python启动脚本，并传递额外的参数：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">python start.py <span class="token parameter variable">--host</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">--port</span> <span class="token number">8080</span> <span class="token parameter variable">--debug</span> --no-browser</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可用参数：</p><ul><li><code>--host</code>: 指定主机地址（默认为配置文件中的值）</li><li><code>--port</code>: 指定端口号（默认为配置文件中的值）</li><li><code>--debug</code>: 启用调试模式</li><li><code>--no-browser</code>: 不自动打开浏览器</li></ul><p>启动后，应用会自动在浏览器中打开。程序会智能选择最合适的本地IP地址（优先使用192.168开头的地址），确保在各种浏览器中都能正常访问。</p><p>你也可以手动访问以下地址：</p><ul><li>本地访问：<code>http://localhost:5000</code> 或 <code>http://127.0.0.1:5000</code></li><li>局域网访问：<code>http://[你的本地IP]:5000</code>（启动时会显示具体地址）</li></ul><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><ul><li><strong>发送消息</strong>：在右上角输入框中输入消息，点击&quot;发送&quot;按钮或按回车键发送</li><li><strong>查看历史</strong>：点击&quot;历史&quot;按钮查看完整对话历史</li><li><strong>切换角色</strong>：点击&quot;角色&quot;按钮选择不同的AI角色</li><li><strong>播放语音</strong>：点击&quot;播放语音&quot;按钮再次播放语音</li><li><strong>更换背景</strong>：点击&quot;更换背景&quot;按钮生成新的背景图片</li><li><strong>自动/手动模式</strong>：点击&quot;自动&quot;按钮切换打字机效果的自动/手动模式</li><li><strong>跳过打字</strong>：在自动模式下，点击&quot;跳过&quot;按钮可以立即显示完整回复</li></ul><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>图像API生成的图片URL有效期为一小时，应用会自动下载并存储图片</li><li>默认情况下，应用会清理超过24小时的旧图片，最多保留20张图片</li><li>如果图像API调用失败，应用会使用缓存的图片作为背景</li><li>角色图片需要放置在<code>static/images/</code>目录下，并在角色配置文件中指定路径</li><li>默认角色设置在<code>characters/__init__.py</code>文件中的<code>_default_character_id</code>变量</li></ul><h2 id="自定义角色" tabindex="-1"><a class="header-anchor" href="#自定义角色"><span>自定义角色</span></a></h2><p>你可以通过创建新的角色配置文件来添加自定义角色。在<code>characters/</code>目录下创建一个新的Python文件，按照以下格式定义角色：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 角色基本信息</span></span>
<span class="line">CHARACTER_ID <span class="token operator">=</span> <span class="token string">&quot;your_character_id&quot;</span></span>
<span class="line">CHARACTER_NAME <span class="token operator">=</span> <span class="token string">&quot;角色名称&quot;</span></span>
<span class="line">CHARACTER_NAME_EN <span class="token operator">=</span> <span class="token string">&quot;Character Name&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 角色外观</span></span>
<span class="line">CHARACTER_IMAGE <span class="token operator">=</span> <span class="token string">&quot;static/images/your_character/&quot;</span>  <span class="token comment"># 角色立绘目录</span></span>
<span class="line">CHARACTER_COLOR <span class="token operator">=</span> <span class="token string">&quot;#ffeb3b&quot;</span>  <span class="token comment"># 角色名称颜色</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 角色设定</span></span>
<span class="line">CHARACTER_DESCRIPTION <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">角色的简短描述</span>
<span class="line">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># AI系统提示词</span></span>
<span class="line">CHARACTER_PROMPT <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">详细的角色设定和提示词，用于指导AI生成符合角色特点的回复</span>
<span class="line">&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 角色欢迎语</span></span>
<span class="line">CHARACTER_WELCOME <span class="token operator">=</span> <span class="token string">&quot;角色的欢迎语&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 角色对话示例</span></span>
<span class="line">CHARACTER_EXAMPLES <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;示例问题1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;示例回答1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment"># 更多示例...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取角色配置</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">get_character_config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;获取角色配置&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> CHARACTER_ID<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> CHARACTER_NAME<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;name_en&quot;</span><span class="token punctuation">:</span> CHARACTER_NAME_EN<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;image&quot;</span><span class="token punctuation">:</span> CHARACTER_IMAGE<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;color&quot;</span><span class="token punctuation">:</span> CHARACTER_COLOR<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;description&quot;</span><span class="token punctuation">:</span> CHARACTER_DESCRIPTION<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;prompt&quot;</span><span class="token punctuation">:</span> CHARACTER_PROMPT<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;welcome&quot;</span><span class="token punctuation">:</span> CHARACTER_WELCOME<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;examples&quot;</span><span class="token punctuation">:</span> CHARACTER_EXAMPLES</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="贡献-按周结算没有并不代表没有" tabindex="-1"><a class="header-anchor" href="#贡献-按周结算没有并不代表没有"><span>贡献，按周结算没有并不代表没有</span></a></h2><p><a href="https://github.com/xhc2008/CABM/graphs/contributors" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/contributors/xhc2008/CABM?color=blue" alt="Contributors"></a></p><p><img src="https://contrib.rocks/image?repo=xhc2008/CABM" alt="Contributors"></p><p>欢迎提交 Pull Request 或 Issue！<s>(但不一定会做)</s></p>`,36)),n("p",null,[s[29]||(s[29]=a("具体贡献流程请参考",-1)),l(t,{to:"/CONTRIBUTING.html"},{default:e(()=>s[28]||(s[28]=[a("CONTRIBUTING.md",-1)])),_:1,__:[28]})]),s[50]||(s[50]=n("h2",{id:"📚-文档索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#📚-文档索引"},[n("span",null,"📚 文档索引")])],-1)),s[51]||(s[51]=n("h3",{id:"部署文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#部署文档"},[n("span",null,"部署文档")])],-1)),n("ul",null,[n("li",null,[l(t,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:e(()=>s[30]||(s[30]=[a("📖 Docker 镜像直接拉取部署指南",-1)])),_:1,__:[30]}),s[31]||(s[31]=a(" - ",-1)),s[32]||(s[32]=n("strong",null,"推荐：无需源码，直接拉取镜像部署",-1))]),n("li",null,[l(t,{to:"/deploy-docs/DOCKER_DEPLOY_GUIDE.html"},{default:e(()=>s[33]||(s[33]=[a("Docker 部署指南",-1)])),_:1,__:[33]}),s[34]||(s[34]=a(" - 完整的 Docker 部署指南",-1))]),n("li",null,[l(t,{to:"/deploy-docs/DOCKER_DEPLOYMENT.html"},{default:e(()=>s[35]||(s[35]=[a("Docker 部署方案",-1)])),_:1,__:[35]}),s[36]||(s[36]=a(" - Docker 部署详细说明",-1))]),n("li",null,[l(t,{to:"/deploy-docs/WINDOWS_DEPLOY_GUIDE.html"},{default:e(()=>s[37]||(s[37]=[a("Windows 部署指南",-1)])),_:1,__:[37]}),s[38]||(s[38]=a(" - Windows 环境部署",-1))]),n("li",null,[l(t,{to:"/deploy-docs/DOCKER_SOLUTION.html"},{default:e(()=>s[39]||(s[39]=[a("Docker 问题解决方案",-1)])),_:1,__:[39]}),s[40]||(s[40]=a(" - 常见问题及解决方案",-1))])]),s[52]||(s[52]=n("h3",{id:"功能文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#功能文档"},[n("span",null,"功能文档")])],-1)),n("ul",null,[n("li",null,[l(t,{to:"/deploy-docs/TTS_GPTSoVITS.html"},{default:e(()=>s[41]||(s[41]=[a("TTS GPT-SoVITS 配置",-1)])),_:1,__:[41]}),s[42]||(s[42]=a(" - 语音合成服务配置",-1))])]),s[53]||(s[53]=n("h3",{id:"开发文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开发文档"},[n("span",null,"开发文档")])],-1)),n("ul",null,[n("li",null,[l(t,{to:"/CONTRIBUTING.html"},{default:e(()=>s[43]||(s[43]=[a("贡献指南",-1)])),_:1,__:[43]}),s[44]||(s[44]=a(" - 如何参与项目开发",-1))])]),s[54]||(s[54]=n("h2",{id:"许可证",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#许可证"},[n("span",null,"许可证")])],-1)),s[55]||(s[55]=n("p",null,[n("a",{href:"LICENSE"},"GNU General Public License v3.0")],-1))])}const f=d(u,[["render",k]]),A=JSON.parse('{"path":"/get-started.html","title":"快速开始","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"快速开始","description":"CABM 项目的快速开始指南，包含安装说明和使用教程"},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"开发状态","slug":"开发状态","link":"#开发状态","children":[]},{"level":2,"title":"项目简介","slug":"项目简介","link":"#项目简介","children":[]},{"level":2,"title":"声明","slug":"声明","link":"#声明","children":[]},{"level":2,"title":"功能特点","slug":"功能特点","link":"#功能特点","children":[]},{"level":2,"title":"安装说明","slug":"安装说明","link":"#安装说明","children":[{"level":3,"title":"🐳 Docker 快速部署（推荐）","slug":"🐳-docker-快速部署-推荐","link":"#🐳-docker-快速部署-推荐","children":[]},{"level":3,"title":"📦 传统安装方式","slug":"📦-传统安装方式","link":"#📦-传统安装方式","children":[]},{"level":3,"title":"🚀 Docker 优势","slug":"🚀-docker-优势","link":"#🚀-docker-优势","children":[]},{"level":3,"title":"📋 环境要求","slug":"📋-环境要求","link":"#📋-环境要求","children":[]}]},{"level":2,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[{"level":3,"title":"启动应用","slug":"启动应用","link":"#启动应用","children":[]},{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"自定义角色","slug":"自定义角色","link":"#自定义角色","children":[]},{"level":2,"title":"贡献，按周结算没有并不代表没有","slug":"贡献-按周结算没有并不代表没有","link":"#贡献-按周结算没有并不代表没有","children":[]},{"level":2,"title":"📚 文档索引","slug":"📚-文档索引","link":"#📚-文档索引","children":[{"level":3,"title":"部署文档","slug":"部署文档","link":"#部署文档","children":[]},{"level":3,"title":"功能文档","slug":"功能文档","link":"#功能文档","children":[]},{"level":3,"title":"开发文档","slug":"开发文档","link":"#开发文档","children":[]}]},{"level":2,"title":"许可证","slug":"许可证","link":"#许可证","children":[]}],"git":{"updatedTime":1754323398000,"contributors":[{"name":"2302_76329346","username":"","email":"2302_76329346@noreply.gitcode.com","commits":3}],"changelog":[{"hash":"9e7634fdfab34f2e51ac081bc14aae8eff3bb887","time":1754323398000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：为多个部署指南添加语言、标题和描述信息"},{"hash":"5b2e0d6e63a8fb211c06fc13b66361b3953c0c48","time":1754320964000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新README.md和CONTRIBUTING.md，完善功能描述和贡献指南；添加LICENSE文件"},{"hash":"f9c61434bda4cac85d5b9c782b7743cb86d12af5","time":1754306992000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"chore: initialize package.json with project metadata and development dependencies"}]},"filePathRelative":"get-started.md"}');export{f as comp,A as data};
