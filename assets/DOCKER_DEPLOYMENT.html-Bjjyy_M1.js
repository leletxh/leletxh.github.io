import{_ as n,c as a,a as e,o as l}from"./app-DrA9LLsr.js";const i={};function p(c,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="cabm-docker-部署文档" tabindex="-1"><a class="header-anchor" href="#cabm-docker-部署文档"><span>CABM Docker 部署文档</span></a></h1><h2 id="📋-概述" tabindex="-1"><a class="header-anchor" href="#📋-概述"><span>📋 概述</span></a></h2><p>本文档介绍如何使用 CABM 项目提供的 Docker 脚手架工具进行开发、部署和发布。我们提供了两个核心脚本来简化 Docker 操作：</p><ul><li><strong><code>deploy-docker.sh</code></strong> - 本地开发和部署管理</li><li><strong><code>release.sh</code></strong> - 镜像构建和发布到注册表</li></ul><h2 id="🛠️-环境准备" tabindex="-1"><a class="header-anchor" href="#🛠️-环境准备"><span>🛠️ 环境准备</span></a></h2><h3 id="系统要求" tabindex="-1"><a class="header-anchor" href="#系统要求"><span>系统要求</span></a></h3><ul><li>Docker 20.10+</li><li>Docker Buildx (多架构构建支持)</li><li>Git (用于版本信息)</li><li>Linux/macOS/Windows(WSL2)</li></ul><h3 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker"><span>安装 Docker</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Ubuntu/Debian</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token parameter variable">-o</span> get-docker.sh</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh</span>
<span class="line"></span>
<span class="line"><span class="token comment"># macOS</span></span>
<span class="line">brew <span class="token function">install</span> <span class="token function">docker</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Windows</span></span>
<span class="line"><span class="token comment"># 下载 Docker Desktop: https://www.docker.com/products/docker-desktop</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启用-docker-buildx" tabindex="-1"><a class="header-anchor" href="#启用-docker-buildx"><span>启用 Docker Buildx</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 安装 buildx 插件</span></span>
<span class="line"><span class="token function">docker</span> buildx <span class="token function">install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建多架构构建器</span></span>
<span class="line"><span class="token function">docker</span> buildx create <span class="token parameter variable">--name</span> multiarch <span class="token parameter variable">--driver</span> docker-container <span class="token parameter variable">--use</span></span>
<span class="line"><span class="token function">docker</span> buildx inspect <span class="token parameter variable">--bootstrap</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔧-配置环境变量" tabindex="-1"><a class="header-anchor" href="#🔧-配置环境变量"><span>🔧 配置环境变量</span></a></h2><h3 id="创建环境配置文件" tabindex="-1"><a class="header-anchor" href="#创建环境配置文件"><span>创建环境配置文件</span></a></h3><p>复制示例配置文件并填入您的 API 密钥：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="编辑-env-文件" tabindex="-1"><a class="header-anchor" href="#编辑-env-文件"><span>编辑 .env 文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 必需配置 - API 密钥</span></span>
<span class="line"><span class="token assign-left variable">CHAT_API_KEY</span><span class="token operator">=</span>your_api_key_here</span>
<span class="line"><span class="token assign-left variable">IMAGE_API_KEY</span><span class="token operator">=</span>your_api_key_here</span>
<span class="line"><span class="token assign-left variable">TTS_SERVICE_API_KEY</span><span class="token operator">=</span>your_api_key_here</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 可选配置</span></span>
<span class="line"><span class="token assign-left variable">DEBUG</span><span class="token operator">=</span>false</span>
<span class="line"><span class="token assign-left variable">HOST</span><span class="token operator">=</span><span class="token number">0.0</span>.0.0</span>
<span class="line"><span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token number">5000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>⚠️ 注意事项：</strong></p><ul><li>请将 <code>your_api_key_here</code> 替换为您的真实 API 密钥</li><li>不要将包含真实密钥的 <code>.env</code> 文件提交到版本控制系统</li><li>生产环境建议使用 Docker Secrets 或环境变量注入</li></ul><h2 id="🚀-本地开发和部署" tabindex="-1"><a class="header-anchor" href="#🚀-本地开发和部署"><span>🚀 本地开发和部署</span></a></h2><h3 id="使用-deploy-docker-sh" tabindex="-1"><a class="header-anchor" href="#使用-deploy-docker-sh"><span>使用 deploy-docker.sh</span></a></h3><p>这是您的主要开发工具，提供完整的容器生命周期管理。</p><h4 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令"><span>基本命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 显示帮助信息</span></span>
<span class="line">./deploy-docker.sh <span class="token parameter variable">--help</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 一键部署（推荐新手使用）</span></span>
<span class="line">./deploy-docker.sh deploy</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 快速构建部署</span></span>
<span class="line">./deploy-docker.sh deploy <span class="token parameter variable">--fast</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="构建镜像" tabindex="-1"><a class="header-anchor" href="#构建镜像"><span>构建镜像</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 标准构建</span></span>
<span class="line">./deploy-docker.sh build</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 网络优化构建（使用国内镜像源）</span></span>
<span class="line">./deploy-docker.sh build <span class="token parameter variable">--fast</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 无缓存构建</span></span>
<span class="line">./deploy-docker.sh build --no-cache</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="容器管理" tabindex="-1"><a class="header-anchor" href="#容器管理"><span>容器管理</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 运行容器</span></span>
<span class="line">./deploy-docker.sh run</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 后台运行</span></span>
<span class="line">./deploy-docker.sh run <span class="token parameter variable">-d</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定端口</span></span>
<span class="line">./deploy-docker.sh run <span class="token parameter variable">--port</span> <span class="token number">8080</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动/停止/重启</span></span>
<span class="line">./deploy-docker.sh start</span>
<span class="line">./deploy-docker.sh stop  </span>
<span class="line">./deploy-docker.sh restart</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="监控和调试" tabindex="-1"><a class="header-anchor" href="#监控和调试"><span>监控和调试</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 查看容器状态</span></span>
<span class="line">./deploy-docker.sh status</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看实时日志</span></span>
<span class="line">./deploy-docker.sh logs <span class="token parameter variable">-f</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 进入容器 Shell</span></span>
<span class="line">./deploy-docker.sh shell</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看最近100行日志</span></span>
<span class="line">./deploy-docker.sh logs <span class="token parameter variable">--tail</span> <span class="token number">100</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="清理" tabindex="-1"><a class="header-anchor" href="#清理"><span>清理</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 清理容器和镜像</span></span>
<span class="line">./deploy-docker.sh clean</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="开发工作流示例" tabindex="-1"><a class="header-anchor" href="#开发工作流示例"><span>开发工作流示例</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 1. 首次设置</span></span>
<span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"><span class="token comment"># 编辑 .env 文件，填入 API 密钥</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 一键部署</span></span>
<span class="line">./deploy-docker.sh deploy <span class="token parameter variable">--fast</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 查看应用状态</span></span>
<span class="line">./deploy-docker.sh status</span>
<span class="line">./deploy-docker.sh logs <span class="token parameter variable">-f</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 代码修改后更新</span></span>
<span class="line">./deploy-docker.sh update <span class="token parameter variable">--fast</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 调试问题</span></span>
<span class="line">./deploy-docker.sh shell</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📦-镜像发布" tabindex="-1"><a class="header-anchor" href="#📦-镜像发布"><span>📦 镜像发布</span></a></h2><h3 id="使用-release-sh" tabindex="-1"><a class="header-anchor" href="#使用-release-sh"><span>使用 release.sh</span></a></h3><p>专门用于构建多架构镜像并发布到各种注册表。</p><h4 id="基本发布" tabindex="-1"><a class="header-anchor" href="#基本发布"><span>基本发布</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 显示帮助</span></span>
<span class="line">./release.sh <span class="token parameter variable">--help</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构建但不推送（本地测试）</span></span>
<span class="line">./release.sh</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构建并推送到所有注册表</span></span>
<span class="line">./release.sh <span class="token parameter variable">--push</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 发布特定版本</span></span>
<span class="line">./release.sh <span class="token parameter variable">-v</span> <span class="token number">1.0</span>.0 <span class="token parameter variable">--push</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="高级发布选项" tabindex="-1"><a class="header-anchor" href="#高级发布选项"><span>高级发布选项</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 发布到特定注册表</span></span>
<span class="line">./release.sh <span class="token parameter variable">-r</span> docker.io <span class="token parameter variable">--push</span></span>
<span class="line">./release.sh <span class="token parameter variable">-r</span> ghcr.io <span class="token parameter variable">--push</span></span>
<span class="line">./release.sh <span class="token parameter variable">-r</span> registry.cn-hangzhou.aliyuncs.com <span class="token parameter variable">--push</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构建特定平台</span></span>
<span class="line">./release.sh <span class="token parameter variable">-p</span> linux/amd64 <span class="token parameter variable">--push</span></span>
<span class="line">./release.sh <span class="token parameter variable">-p</span> linux/arm64 <span class="token parameter variable">--push</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 预览发布命令</span></span>
<span class="line">./release.sh --dry-run <span class="token parameter variable">--push</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="支持的注册表" tabindex="-1"><a class="header-anchor" href="#支持的注册表"><span>支持的注册表</span></a></h3><table><thead><tr><th>注册表</th><th>地址</th><th>说明</th></tr></thead><tbody><tr><td>Docker Hub</td><td>docker.io</td><td>最流行的公共注册表</td></tr><tr><td>GitHub Container Registry</td><td>ghcr.io</td><td>GitHub 集成注册表</td></tr><tr><td>阿里云容器镜像服务</td><td>registry.cn-hangzhou.aliyuncs.com</td><td>中国大陆访问友好</td></tr></tbody></table><h3 id="注册表认证" tabindex="-1"><a class="header-anchor" href="#注册表认证"><span>注册表认证</span></a></h3><h4 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub"><span>Docker Hub</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKER_USERNAME</span><span class="token operator">=</span>your_username</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKER_PASSWORD</span><span class="token operator">=</span>your_password</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="github-container-registry" tabindex="-1"><a class="header-anchor" href="#github-container-registry"><span>GitHub Container Registry</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GITHUB_ACTOR</span><span class="token operator">=</span>your_github_username</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GITHUB_TOKEN</span><span class="token operator">=</span>your_github_token</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="阿里云容器镜像服务" tabindex="-1"><a class="header-anchor" href="#阿里云容器镜像服务"><span>阿里云容器镜像服务</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">ALIYUN_USERNAME</span><span class="token operator">=</span>your_aliyun_username</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">ALIYUN_PASSWORD</span><span class="token operator">=</span>your_aliyun_password</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">ALIYUN_NAMESPACE</span><span class="token operator">=</span>your_namespace</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="发布工作流示例" tabindex="-1"><a class="header-anchor" href="#发布工作流示例"><span>发布工作流示例</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 1. 设置认证信息</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKER_USERNAME</span><span class="token operator">=</span>myusername</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKER_PASSWORD</span><span class="token operator">=</span>mypassword</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 本地测试构建</span></span>
<span class="line">./release.sh <span class="token parameter variable">-v</span> <span class="token number">1.0</span>.0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 发布到 Docker Hub</span></span>
<span class="line">./release.sh <span class="token parameter variable">-v</span> <span class="token number">1.0</span>.0 <span class="token parameter variable">-r</span> docker.io <span class="token parameter variable">--push</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 发布到所有注册表</span></span>
<span class="line">./release.sh <span class="token parameter variable">-v</span> <span class="token number">1.0</span>.0 <span class="token parameter variable">--push</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 发布开发版本（不标记为latest）</span></span>
<span class="line">./release.sh <span class="token parameter variable">-v</span> dev-20250103 --no-latest <span class="token parameter variable">--push</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔄-ci-cd-集成" tabindex="-1"><a class="header-anchor" href="#🔄-ci-cd-集成"><span>🔄 CI/CD 集成</span></a></h2><h3 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>GitHub Actions</span></a></h3><p>我们已经为您准备了 GitHub Actions 配置文件（<code>.github/workflows/docker.yml</code>），支持：</p><ul><li>自动多架构构建</li><li>发布到多个注册表</li><li>版本标签管理</li><li>Pull Request 构建测试</li></ul><h3 id="手动触发发布" tabindex="-1"><a class="header-anchor" href="#手动触发发布"><span>手动触发发布</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 在项目根目录</span></span>
<span class="line"><span class="token function">git</span> tag v1.0.0</span>
<span class="line"><span class="token function">git</span> push origin v1.0.0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 或者手动触发 workflow</span></span>
<span class="line"><span class="token comment"># 在 GitHub 仓库页面 -&gt; Actions -&gt; 选择 workflow -&gt; Run workflow</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📁-目录结构" tabindex="-1"><a class="header-anchor" href="#📁-目录结构"><span>📁 目录结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">CABM/</span>
<span class="line">├── deploy-docker.sh          # 开发部署脚本</span>
<span class="line">├── release.sh               # 镜像发布脚本</span>
<span class="line">├── Dockerfile              # Docker 镜像构建文件</span>
<span class="line">├── docker-compose.yml      # Docker Compose 配置</span>
<span class="line">├── .env                    # 环境变量配置</span>
<span class="line">├── .env.example            # 环境变量模板</span>
<span class="line">├── .dockerignore           # Docker 忽略文件</span>
<span class="line">└── .github/</span>
<span class="line">    └── workflows/</span>
<span class="line">        └── docker.yml      # GitHub Actions CI/CD</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🐛-常见问题" tabindex="-1"><a class="header-anchor" href="#🐛-常见问题"><span>🐛 常见问题</span></a></h2><h3 id="_1-端口被占用" tabindex="-1"><a class="header-anchor" href="#_1-端口被占用"><span>1. 端口被占用</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 问题：Error: Port 5000 is already in use</span></span>
<span class="line"><span class="token comment"># 解决：</span></span>
<span class="line">./deploy-docker.sh run <span class="token parameter variable">--port</span> <span class="token number">8080</span></span>
<span class="line"><span class="token comment"># 或者停止占用端口的服务</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">lsof</span> <span class="token parameter variable">-ti:5000</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-docker-权限问题" tabindex="-1"><a class="header-anchor" href="#_2-docker-权限问题"><span>2. Docker 权限问题</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 问题：Permission denied while trying to connect to Docker daemon</span></span>
<span class="line"><span class="token comment"># 解决：将用户添加到 docker 组</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span></span>
<span class="line"><span class="token comment"># 重新登录生效</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-镜像构建失败" tabindex="-1"><a class="header-anchor" href="#_3-镜像构建失败"><span>3. 镜像构建失败</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 清理并重试</span></span>
<span class="line">./deploy-docker.sh clean</span>
<span class="line">./deploy-docker.sh build --no-cache</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-网络问题" tabindex="-1"><a class="header-anchor" href="#_4-网络问题"><span>4. 网络问题</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用国内镜像源</span></span>
<span class="line">./deploy-docker.sh build <span class="token parameter variable">--fast</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-容器启动失败" tabindex="-1"><a class="header-anchor" href="#_5-容器启动失败"><span>5. 容器启动失败</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 查看详细日志</span></span>
<span class="line">./deploy-docker.sh logs</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 进入容器调试</span></span>
<span class="line">./deploy-docker.sh shell</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-api-密钥配置错误" tabindex="-1"><a class="header-anchor" href="#_6-api-密钥配置错误"><span>6. API 密钥配置错误</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 检查环境变量</span></span>
<span class="line">./deploy-docker.sh shell</span>
<span class="line"><span class="token function">env</span> <span class="token operator">|</span> <span class="token function">grep</span> API</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重新配置 .env 文件</span></span>
<span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"><span class="token comment"># 编辑 .env 并重新部署</span></span>
<span class="line">./deploy-docker.sh update</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-性能优化" tabindex="-1"><a class="header-anchor" href="#📊-性能优化"><span>📊 性能优化</span></a></h2><h3 id="构建优化" tabindex="-1"><a class="header-anchor" href="#构建优化"><span>构建优化</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用 .dockerignore 减少构建上下文</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;node_modules/&quot;</span> <span class="token operator">&gt;&gt;</span> .dockerignore</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;*.log&quot;</span> <span class="token operator">&gt;&gt;</span> .dockerignore</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用多阶段构建（已在 Dockerfile 中配置）</span></span>
<span class="line"><span class="token comment"># 使用国内镜像源加速</span></span>
<span class="line">./deploy-docker.sh build <span class="token parameter variable">--fast</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行优化" tabindex="-1"><a class="header-anchor" href="#运行优化"><span>运行优化</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 限制容器资源使用</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--memory</span><span class="token operator">=</span>1g <span class="token parameter variable">--cpus</span><span class="token operator">=</span><span class="token number">1</span> cabm:latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用数据卷持久化数据</span></span>
<span class="line"><span class="token comment"># （deploy-docker.sh 已自动配置）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔒-安全最佳实践" tabindex="-1"><a class="header-anchor" href="#🔒-安全最佳实践"><span>🔒 安全最佳实践</span></a></h2><ol><li><p><strong>环境变量安全</strong></p><ul><li>不要在代码中硬编码密钥</li><li>使用 <code>.env</code> 文件管理敏感信息</li><li>生产环境使用 Docker Secrets</li></ul></li><li><p><strong>镜像安全</strong></p><ul><li>定期更新基础镜像</li><li>使用官方镜像</li><li>扫描镜像漏洞</li></ul></li><li><p><strong>网络安全</strong></p><ul><li>仅暴露必要端口</li><li>使用反向代理</li><li>配置防火墙规则</li></ul></li></ol><h2 id="📖-进阶用法" tabindex="-1"><a class="header-anchor" href="#📖-进阶用法"><span>📖 进阶用法</span></a></h2><h3 id="自定义构建参数" tabindex="-1"><a class="header-anchor" href="#自定义构建参数"><span>自定义构建参数</span></a></h3><p>编辑 <code>Dockerfile</code> 添加构建参数：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">ARG</span> CUSTOM_VERSION=latest</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">ARG</span> BUILD_ENV=production</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在脚本中使用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 修改 deploy-docker.sh 或 release.sh</span></span>
<span class="line"><span class="token function">docker</span> build --build-arg <span class="token assign-left variable">CUSTOM_VERSION</span><span class="token operator">=</span><span class="token number">1.0</span>.0 <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多环境部署" tabindex="-1"><a class="header-anchor" href="#多环境部署"><span>多环境部署</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 开发环境</span></span>
<span class="line">./deploy-docker.sh run --env-file .env.dev</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试环境  </span></span>
<span class="line">./deploy-docker.sh run --env-file .env.test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生产环境</span></span>
<span class="line">./deploy-docker.sh run --env-file .env.prod</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="监控集成" tabindex="-1"><a class="header-anchor" href="#监控集成"><span>监控集成</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 添加健康检查</span></span>
<span class="line"><span class="token comment"># （已在 Dockerfile 中配置）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 集成 Prometheus 监控</span></span>
<span class="line"><span class="token comment"># 在 docker-compose.yml 中添加监控服务</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🤝-贡献指南" tabindex="-1"><a class="header-anchor" href="#🤝-贡献指南"><span>🤝 贡献指南</span></a></h2><p>如果您想改进这些脚本：</p><ol><li>Fork 项目</li><li>创建功能分支：<code>git checkout -b feature/amazing-feature</code></li><li>提交更改：<code>git commit -m &#39;Add amazing feature&#39;</code></li><li>推送分支：<code>git push origin feature/amazing-feature</code></li><li>创建 Pull Request</li></ol><h2 id="📞-技术支持" tabindex="-1"><a class="header-anchor" href="#📞-技术支持"><span>📞 技术支持</span></a></h2><p>如果遇到问题：</p><ol><li>查看本文档的常见问题部分</li><li>检查项目的 GitHub Issues</li><li>在 GitHub 上创建新的 Issue</li></ol><hr><p><strong>🎉 现在您已经掌握了 CABM Docker 部署的全部技能！开始您的容器化之旅吧！</strong></p>`,98)]))}const d=n(i,[["render",p]]),t=JSON.parse('{"path":"/deploy-docs/DOCKER_DEPLOYMENT.html","title":"CABM Docker 部署文档","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"CABM Docker 部署文档","description":"使用 Docker 脚手架工具进行开发、部署和发布的完整指南"},"headers":[{"level":2,"title":"📋 概述","slug":"📋-概述","link":"#📋-概述","children":[]},{"level":2,"title":"🛠️ 环境准备","slug":"🛠️-环境准备","link":"#🛠️-环境准备","children":[{"level":3,"title":"系统要求","slug":"系统要求","link":"#系统要求","children":[]},{"level":3,"title":"安装 Docker","slug":"安装-docker","link":"#安装-docker","children":[]},{"level":3,"title":"启用 Docker Buildx","slug":"启用-docker-buildx","link":"#启用-docker-buildx","children":[]}]},{"level":2,"title":"🔧 配置环境变量","slug":"🔧-配置环境变量","link":"#🔧-配置环境变量","children":[{"level":3,"title":"创建环境配置文件","slug":"创建环境配置文件","link":"#创建环境配置文件","children":[]},{"level":3,"title":"编辑 .env 文件","slug":"编辑-env-文件","link":"#编辑-env-文件","children":[]}]},{"level":2,"title":"🚀 本地开发和部署","slug":"🚀-本地开发和部署","link":"#🚀-本地开发和部署","children":[{"level":3,"title":"使用 deploy-docker.sh","slug":"使用-deploy-docker-sh","link":"#使用-deploy-docker-sh","children":[]},{"level":3,"title":"开发工作流示例","slug":"开发工作流示例","link":"#开发工作流示例","children":[]}]},{"level":2,"title":"📦 镜像发布","slug":"📦-镜像发布","link":"#📦-镜像发布","children":[{"level":3,"title":"使用 release.sh","slug":"使用-release-sh","link":"#使用-release-sh","children":[]},{"level":3,"title":"支持的注册表","slug":"支持的注册表","link":"#支持的注册表","children":[]},{"level":3,"title":"注册表认证","slug":"注册表认证","link":"#注册表认证","children":[]},{"level":3,"title":"发布工作流示例","slug":"发布工作流示例","link":"#发布工作流示例","children":[]}]},{"level":2,"title":"🔄 CI/CD 集成","slug":"🔄-ci-cd-集成","link":"#🔄-ci-cd-集成","children":[{"level":3,"title":"GitHub Actions","slug":"github-actions","link":"#github-actions","children":[]},{"level":3,"title":"手动触发发布","slug":"手动触发发布","link":"#手动触发发布","children":[]}]},{"level":2,"title":"📁 目录结构","slug":"📁-目录结构","link":"#📁-目录结构","children":[]},{"level":2,"title":"🐛 常见问题","slug":"🐛-常见问题","link":"#🐛-常见问题","children":[{"level":3,"title":"1. 端口被占用","slug":"_1-端口被占用","link":"#_1-端口被占用","children":[]},{"level":3,"title":"2. Docker 权限问题","slug":"_2-docker-权限问题","link":"#_2-docker-权限问题","children":[]},{"level":3,"title":"3. 镜像构建失败","slug":"_3-镜像构建失败","link":"#_3-镜像构建失败","children":[]},{"level":3,"title":"4. 网络问题","slug":"_4-网络问题","link":"#_4-网络问题","children":[]},{"level":3,"title":"5. 容器启动失败","slug":"_5-容器启动失败","link":"#_5-容器启动失败","children":[]},{"level":3,"title":"6. API 密钥配置错误","slug":"_6-api-密钥配置错误","link":"#_6-api-密钥配置错误","children":[]}]},{"level":2,"title":"📊 性能优化","slug":"📊-性能优化","link":"#📊-性能优化","children":[{"level":3,"title":"构建优化","slug":"构建优化","link":"#构建优化","children":[]},{"level":3,"title":"运行优化","slug":"运行优化","link":"#运行优化","children":[]}]},{"level":2,"title":"🔒 安全最佳实践","slug":"🔒-安全最佳实践","link":"#🔒-安全最佳实践","children":[]},{"level":2,"title":"📖 进阶用法","slug":"📖-进阶用法","link":"#📖-进阶用法","children":[{"level":3,"title":"自定义构建参数","slug":"自定义构建参数","link":"#自定义构建参数","children":[]},{"level":3,"title":"多环境部署","slug":"多环境部署","link":"#多环境部署","children":[]},{"level":3,"title":"监控集成","slug":"监控集成","link":"#监控集成","children":[]}]},{"level":2,"title":"🤝 贡献指南","slug":"🤝-贡献指南","link":"#🤝-贡献指南","children":[]},{"level":2,"title":"📞 技术支持","slug":"📞-技术支持","link":"#📞-技术支持","children":[]}],"git":{"updatedTime":1754323398000,"contributors":[{"name":"2302_76329346","username":"","email":"2302_76329346@noreply.gitcode.com","commits":2}],"changelog":[{"hash":"9e7634fdfab34f2e51ac081bc14aae8eff3bb887","time":1754323398000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：为多个部署指南添加语言、标题和描述信息"},{"hash":"f9c61434bda4cac85d5b9c782b7743cb86d12af5","time":1754306992000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"chore: initialize package.json with project metadata and development dependencies"}]},"filePathRelative":"deploy-docs/DOCKER_DEPLOYMENT.md"}');export{d as comp,t as data};
