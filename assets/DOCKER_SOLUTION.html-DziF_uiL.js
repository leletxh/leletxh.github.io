import{_ as e,c as n,a,o as l}from"./app-DrA9LLsr.js";const i={};function c(d,s){return l(),n("div",null,s[0]||(s[0]=[a(`<h1 id="docker-问题解决方案" tabindex="-1"><a class="header-anchor" href="#docker-问题解决方案"><span>Docker 问题解决方案</span></a></h1><h2 id="📝-问题总结" tabindex="-1"><a class="header-anchor" href="#📝-问题总结"><span>📝 问题总结</span></a></h2><p>经过为CABM项目搭建Docker环境，我已经完成了以下工作：</p><h3 id="✅-已完成的配置" tabindex="-1"><a class="header-anchor" href="#✅-已完成的配置"><span>✅ 已完成的配置</span></a></h3><ol><li><p><strong>核心文件创建</strong></p><ul><li><code>Dockerfile</code> - 支持多架构的镜像构建文件</li><li><code>docker-compose.yml</code> - 完整的服务编排配置</li><li><code>.env.docker</code> - 环境变量模板</li><li><code>.dockerignore</code> - 构建优化配置</li></ul></li><li><p><strong>管理脚本</strong></p><ul><li><code>docker-start.sh</code> - 主管理脚本（启动、停止、重启等）</li><li><code>deploy.sh</code> - 一键部署脚本</li><li><code>test-docker.sh</code> - 本地开发测试脚本</li><li><code>build-local.sh</code> - 本地单架构构建脚本</li><li><code>release.sh</code> - 镜像发布脚本（已修复多架构问题）</li></ul></li><li><p><strong>CI/CD配置</strong></p><ul><li><code>.github/workflows/docker.yml</code> - GitHub Actions自动构建</li></ul></li><li><p><strong>文档</strong></p><ul><li><code>DOCKER.md</code> - Docker部署指南</li><li><code>DOCKER_COMPLETE.md</code> - 完整使用文档</li></ul></li></ol><h3 id="🔧-遇到的问题与解决方案" tabindex="-1"><a class="header-anchor" href="#🔧-遇到的问题与解决方案"><span>🔧 遇到的问题与解决方案</span></a></h3><h4 id="_1-多架构构建问题" tabindex="-1"><a class="header-anchor" href="#_1-多架构构建问题"><span>1. 多架构构建问题</span></a></h4><p><strong>问题</strong>: <code>--load</code> 参数不支持多架构镜像导出 <strong>解决方案</strong>: 修改了 <code>release.sh</code> 脚本，分离本地构建和多架构推送</p><h4 id="_2-网络下载慢问题" tabindex="-1"><a class="header-anchor" href="#_2-网络下载慢问题"><span>2. 网络下载慢问题</span></a></h4><p><strong>问题</strong>: Python基础镜像下载缓慢 <strong>解决方案</strong>:</p><ul><li>提供了 <code>build-local.sh</code> 脚本用于本地开发</li><li>可以使用国内镜像源</li><li>建议使用预构建镜像</li></ul><h2 id="🚀-快速开始方案" tabindex="-1"><a class="header-anchor" href="#🚀-快速开始方案"><span>🚀 快速开始方案</span></a></h2><h3 id="方案1-使用本地构建脚本-推荐用于开发" tabindex="-1"><a class="header-anchor" href="#方案1-使用本地构建脚本-推荐用于开发"><span>方案1：使用本地构建脚本（推荐用于开发）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 构建本地镜像（单架构，速度更快）</span></span>
<span class="line">./build-local.sh v1.0.0 build</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试镜像</span></span>
<span class="line">./build-local.sh v1.0.0 <span class="token builtin class-name">test</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 运行容器</span></span>
<span class="line">./build-local.sh v1.0.0 run</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方案2-直接使用docker-compose" tabindex="-1"><a class="header-anchor" href="#方案2-直接使用docker-compose"><span>方案2：直接使用Docker Compose</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 配置环境变量</span></span>
<span class="line"><span class="token function">cp</span> .env.docker .env.docker</span>
<span class="line"><span class="token comment"># 编辑 .env.docker，填入API密钥</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用docker-compose快速启动</span></span>
<span class="line">./docker-start.sh start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方案3-使用预构建镜像-推荐用于生产" tabindex="-1"><a class="header-anchor" href="#方案3-使用预构建镜像-推荐用于生产"><span>方案3：使用预构建镜像（推荐用于生产）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 等待GitHub Actions构建完成后</span></span>
<span class="line"><span class="token function">docker</span> pull ghcr.io/xhc2008/cabm:latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用预构建镜像启动</span></span>
<span class="line"><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🐳-国内网络优化建议" tabindex="-1"><a class="header-anchor" href="#🐳-国内网络优化建议"><span>🐳 国内网络优化建议</span></a></h2><h3 id="_1-使用国内docker镜像源" tabindex="-1"><a class="header-anchor" href="#_1-使用国内docker镜像源"><span>1. 使用国内Docker镜像源</span></a></h3><p>编辑 <code>/etc/docker/daemon.json</code>:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启Docker:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl restart <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-修改dockerfile使用国内源" tabindex="-1"><a class="header-anchor" href="#_2-修改dockerfile使用国内源"><span>2. 修改Dockerfile使用国内源</span></a></h3><p>可以修改Dockerfile，使用国内Python源：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker"><pre><code><span class="line"><span class="token comment"># 在RUN pip install前添加</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-预下载基础镜像" tabindex="-1"><a class="header-anchor" href="#_3-预下载基础镜像"><span>3. 预下载基础镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 提前下载Python基础镜像</span></span>
<span class="line"><span class="token function">docker</span> pull python:3.11-slim</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-测试结果" tabindex="-1"><a class="header-anchor" href="#📊-测试结果"><span>📊 测试结果</span></a></h2><p>当前状态：</p><ul><li>✅ 所有脚本已创建并设置执行权限</li><li>✅ Dockerfile配置完成，支持多架构</li><li>✅ docker-compose配置完成</li><li>✅ 多架构构建问题已修复</li><li>✅ 本地构建脚本已优化</li><li>⏳ 网络下载速度依赖网络环境</li></ul><h2 id="🔄-下一步行动" tabindex="-1"><a class="header-anchor" href="#🔄-下一步行动"><span>🔄 下一步行动</span></a></h2><h3 id="立即可用的方案" tabindex="-1"><a class="header-anchor" href="#立即可用的方案"><span>立即可用的方案：</span></a></h3><ol><li><p><strong>本地开发</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./build-local.sh latest build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>快速部署</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 配置API密钥后</span></span>
<span class="line">./deploy.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>生产发布</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 推送到GitHub后自动构建</span></span>
<span class="line"><span class="token function">git</span> push origin main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="镜像仓库准备" tabindex="-1"><a class="header-anchor" href="#镜像仓库准备"><span>镜像仓库准备</span></a></h3><p>脚本已配置支持多个镜像仓库：</p><ul><li>GitHub Container Registry: <code>ghcr.io/xhc2008/cabm</code></li><li>Docker Hub: <code>docker.io/xhc2008/cabm</code></li><li>阿里云: <code>registry.cn-hangzhou.aliyuncs.com/xhc2008/cabm</code></li></ul><h2 id="🎯-推荐使用流程" tabindex="-1"><a class="header-anchor" href="#🎯-推荐使用流程"><span>🎯 推荐使用流程</span></a></h2><h3 id="开发阶段" tabindex="-1"><a class="header-anchor" href="#开发阶段"><span>开发阶段：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./build-local.sh dev build   <span class="token comment"># 构建开发版本</span></span>
<span class="line">./build-local.sh dev <span class="token builtin class-name">test</span>    <span class="token comment"># 测试功能</span></span>
<span class="line">./build-local.sh dev run     <span class="token comment"># 运行调试</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试阶段" tabindex="-1"><a class="header-anchor" href="#测试阶段"><span>测试阶段：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./test-docker.sh <span class="token builtin class-name">test</span>        <span class="token comment"># 完整测试流程</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="发布阶段" tabindex="-1"><a class="header-anchor" href="#发布阶段"><span>发布阶段：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./release.sh v1.0.0          <span class="token comment"># 发布正式版本</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="📚-完整文档" tabindex="-1"><a class="header-anchor" href="#📚-完整文档"><span>📚 完整文档</span></a></h2><ul><li><strong>快速入门</strong>: 查看 <code>DOCKER.md</code></li><li><strong>完整指南</strong>: 查看 <code>DOCKER_COMPLETE.md</code></li><li><strong>脚本帮助</strong>: 运行任意脚本后加 <code>help</code> 参数</li></ul><p>所有脚本都包含详细的帮助信息和错误处理，确保用户友好的体验！</p><hr><p><strong>Docker化工作已完成，现在可以享受容器化部署的便利！</strong> 🐳</p>`,50)]))}const t=e(i,[["render",c]]),o=JSON.parse('{"path":"/deploy-docs/DOCKER_SOLUTION.html","title":"Docker 问题解决方案","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Docker 问题解决方案","description":"CABM 项目 Docker 环境配置的问题总结和解决方案"},"headers":[{"level":2,"title":"📝 问题总结","slug":"📝-问题总结","link":"#📝-问题总结","children":[{"level":3,"title":"✅ 已完成的配置","slug":"✅-已完成的配置","link":"#✅-已完成的配置","children":[]},{"level":3,"title":"🔧 遇到的问题与解决方案","slug":"🔧-遇到的问题与解决方案","link":"#🔧-遇到的问题与解决方案","children":[]}]},{"level":2,"title":"🚀 快速开始方案","slug":"🚀-快速开始方案","link":"#🚀-快速开始方案","children":[{"level":3,"title":"方案1：使用本地构建脚本（推荐用于开发）","slug":"方案1-使用本地构建脚本-推荐用于开发","link":"#方案1-使用本地构建脚本-推荐用于开发","children":[]},{"level":3,"title":"方案2：直接使用Docker Compose","slug":"方案2-直接使用docker-compose","link":"#方案2-直接使用docker-compose","children":[]},{"level":3,"title":"方案3：使用预构建镜像（推荐用于生产）","slug":"方案3-使用预构建镜像-推荐用于生产","link":"#方案3-使用预构建镜像-推荐用于生产","children":[]}]},{"level":2,"title":"🐳 国内网络优化建议","slug":"🐳-国内网络优化建议","link":"#🐳-国内网络优化建议","children":[{"level":3,"title":"1. 使用国内Docker镜像源","slug":"_1-使用国内docker镜像源","link":"#_1-使用国内docker镜像源","children":[]},{"level":3,"title":"2. 修改Dockerfile使用国内源","slug":"_2-修改dockerfile使用国内源","link":"#_2-修改dockerfile使用国内源","children":[]},{"level":3,"title":"3. 预下载基础镜像","slug":"_3-预下载基础镜像","link":"#_3-预下载基础镜像","children":[]}]},{"level":2,"title":"📊 测试结果","slug":"📊-测试结果","link":"#📊-测试结果","children":[]},{"level":2,"title":"🔄 下一步行动","slug":"🔄-下一步行动","link":"#🔄-下一步行动","children":[{"level":3,"title":"立即可用的方案：","slug":"立即可用的方案","link":"#立即可用的方案","children":[]},{"level":3,"title":"镜像仓库准备","slug":"镜像仓库准备","link":"#镜像仓库准备","children":[]}]},{"level":2,"title":"🎯 推荐使用流程","slug":"🎯-推荐使用流程","link":"#🎯-推荐使用流程","children":[{"level":3,"title":"开发阶段：","slug":"开发阶段","link":"#开发阶段","children":[]},{"level":3,"title":"测试阶段：","slug":"测试阶段","link":"#测试阶段","children":[]},{"level":3,"title":"发布阶段：","slug":"发布阶段","link":"#发布阶段","children":[]}]},{"level":2,"title":"📚 完整文档","slug":"📚-完整文档","link":"#📚-完整文档","children":[]}],"git":{"updatedTime":1754323398000,"contributors":[{"name":"2302_76329346","username":"","email":"2302_76329346@noreply.gitcode.com","commits":2}],"changelog":[{"hash":"9e7634fdfab34f2e51ac081bc14aae8eff3bb887","time":1754323398000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：为多个部署指南添加语言、标题和描述信息"},{"hash":"f9c61434bda4cac85d5b9c782b7743cb86d12af5","time":1754306992000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"chore: initialize package.json with project metadata and development dependencies"}]},"filePathRelative":"deploy-docs/DOCKER_SOLUTION.md"}');export{t as comp,o as data};
