import{_ as o,c as p,a as d,b as e,d as a,w as l,e as n,r,o as c}from"./app-Bl6CRt2j.js";const u={},h={class:"table-of-contents"},m={id:"冷知识-如果你打不开上面的页面-不妨看看如何加速",tabindex:"-1"},b={class:"header-anchor",href:"#冷知识-如果你打不开上面的页面-不妨看看如何加速"},v={id:"如果你的显卡较好推荐使用gpt-sovits语音合成",tabindex:"-1"},g={class:"header-anchor",href:"#如果你的显卡较好推荐使用gpt-sovits语音合成"},k={id:"硅基流动的详细使用说明",tabindex:"-1"},f={class:"header-anchor",href:"#硅基流动的详细使用说明"};function x(_,s){const i=r("router-link"),t=r("RouteLink");return c(),p("div",null,[s[43]||(s[43]=d('<h1 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h1><p>&quot;当灵性注入载体，它便挣脱物质躯壳，抵达超验之境。&quot;</p><p><s>（不就是个Gal吗）</s></p><blockquote><p><em>此文档最近一次更新时间：2025.08.17</em></p></blockquote><blockquote><h2 id="⚠️-注意-本项目目前处于开发阶段-核心功能已经实现-可能吧-其他的功能和优化也正在进行中。欢迎贡献代码或提出建议。" tabindex="-1"><a class="header-anchor" href="#⚠️-注意-本项目目前处于开发阶段-核心功能已经实现-可能吧-其他的功能和优化也正在进行中。欢迎贡献代码或提出建议。"><span><strong>⚠️ 注意：本项目目前处于开发阶段，核心功能已经实现（可能吧？），其他的功能和优化也正在进行中。欢迎贡献代码或提出建议。</strong></span></a></h2></blockquote><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2>',6)),e("nav",h,[e("ul",null,[e("li",null,[a(i,{to:"#目录"},{default:l(()=>s[0]||(s[0]=[n("目录",-1)])),_:1,__:[0]})]),e("li",null,[a(i,{to:"#开发状态"},{default:l(()=>s[1]||(s[1]=[n("开发状态",-1)])),_:1,__:[1]})]),e("li",null,[a(i,{to:"#项目简介"},{default:l(()=>s[2]||(s[2]=[n("项目简介",-1)])),_:1,__:[2]})]),e("li",null,[a(i,{to:"#声明"},{default:l(()=>s[3]||(s[3]=[n("声明",-1)])),_:1,__:[3]})]),e("li",null,[a(i,{to:"#功能特点"},{default:l(()=>s[4]||(s[4]=[n("功能特点",-1)])),_:1,__:[4]})]),e("li",null,[a(i,{to:"#安装说明"},{default:l(()=>s[5]||(s[5]=[n("安装说明",-1)])),_:1,__:[5]}),e("ul",null,[e("li",null,[a(i,{to:"#📦-一键包-较为推荐-极简"},{default:l(()=>s[6]||(s[6]=[n("📦 一键包，较为推荐，极简",-1)])),_:1,__:[6]})]),e("li",null,[a(i,{to:"#🐳-docker-快速部署-推荐-但要软件"},{default:l(()=>s[7]||(s[7]=[n("🐳 Docker 快速部署（推荐，但要软件）",-1)])),_:1,__:[7]})]),e("li",null,[a(i,{to:"#📦-conda安装方式"},{default:l(()=>s[8]||(s[8]=[n("📦 conda安装方式",-1)])),_:1,__:[8]})]),e("li",null,[a(i,{to:"#📦-传统安装方式"},{default:l(()=>s[9]||(s[9]=[n("📦 传统安装方式",-1)])),_:1,__:[9]})]),e("li",null,[a(i,{to:"#🚀-docker-优势"},{default:l(()=>s[10]||(s[10]=[n("🚀 Docker 优势",-1)])),_:1,__:[10]})]),e("li",null,[a(i,{to:"#📋-环境要求"},{default:l(()=>s[11]||(s[11]=[n("📋 环境要求",-1)])),_:1,__:[11]})])])]),e("li",null,[a(i,{to:"#使用说明"},{default:l(()=>s[12]||(s[12]=[n("使用说明",-1)])),_:1,__:[12]}),e("ul",null,[e("li",null,[a(i,{to:"#启动应用"},{default:l(()=>s[13]||(s[13]=[n("启动应用",-1)])),_:1,__:[13]})]),e("li",null,[a(i,{to:"#基本操作"},{default:l(()=>s[14]||(s[14]=[n("基本操作",-1)])),_:1,__:[14]})])])]),e("li",null,[a(i,{to:"#注意事项"},{default:l(()=>s[15]||(s[15]=[n("注意事项",-1)])),_:1,__:[15]})]),e("li",null,[a(i,{to:"#自定义角色"},{default:l(()=>s[16]||(s[16]=[n("自定义角色",-1)])),_:1,__:[16]})]),e("li",null,[a(i,{to:"#贡献-按周结算没有并不代表没有"},{default:l(()=>s[17]||(s[17]=[n("贡献，按周结算没有并不代表没有",-1)])),_:1,__:[17]})]),e("li",null,[a(i,{to:"#📚-文档索引"},{default:l(()=>s[18]||(s[18]=[n("📚 文档索引",-1)])),_:1,__:[18]}),e("ul",null,[e("li",null,[a(i,{to:"#部署文档"},{default:l(()=>s[19]||(s[19]=[n("部署文档",-1)])),_:1,__:[19]})]),e("li",null,[a(i,{to:"#功能文档"},{default:l(()=>s[20]||(s[20]=[n("功能文档",-1)])),_:1,__:[20]})]),e("li",null,[a(i,{to:"#开发文档"},{default:l(()=>s[21]||(s[21]=[n("开发文档",-1)])),_:1,__:[21]})])])]),e("li",null,[a(i,{to:"#许可证"},{default:l(()=>s[22]||(s[22]=[n("许可证",-1)])),_:1,__:[22]})])])]),s[44]||(s[44]=d('<h2 id="开发状态" tabindex="-1"><a class="header-anchor" href="#开发状态"><span>开发状态</span></a></h2><p><strong>已完成功能：</strong></p><ul><li>基本的AI对话功能，包含最近的历史记录</li><li>前端的主页面（现在是科幻风了）</li><li>角色系统（可切换不同角色）</li><li>分段流式输出（灵魂所在~）</li><li>记忆系统（使用向量数据库长期保存记忆）</li><li>AI生成选项</li><li>简单的角色动作（呼吸）</li><li>角色的表情（后面或许会换成3D模型）</li><li>自定义角色（目前只能加，不能删改）</li><li>剧情模式（根据大纲推动故事发展）</li><li>角色的知识库（背景故事、人物细节等）</li><li><s>语音输入</s>（问题太多了，目前几乎用不了）</li><li>很多的bug</li></ul><p><strong>正在开发：</strong></p><ul><li>场景切换（让AI切换场景或生成新场景）</li><li>中期记忆（包括当前目标等）</li><li>多个参考音频（不同心情使用对应的参考音频）</li><li>更多的预设角色</li><li>改进剧情模式的流程</li><li>用户画像（角色对用户的印象）</li><li><s>记忆权重，记忆遗忘</s>（难度有点大，暂不考虑）</li><li>更多的bug</li></ul><h2 id="项目简介" tabindex="-1"><a class="header-anchor" href="#项目简介"><span>项目简介</span></a></h2><p>CABM（Code Afflatus &amp; Beyond Matter）是一个融合先进AI技术的沉浸式对话应用，用户可以与AI角色进行深度互动，体验类似视觉小说(Galgame)的情感化叙事。项目结合了大型语言模型、检索增强生成、语音合成等技术，提供：</p><ul><li><strong>智能角色系统</strong>：每个角色拥有独特人格、背景故事和情感表达</li><li><strong>动态叙事体验</strong>：剧情模式根据用户选择推动故事发展</li><li><strong>情感驱动交互</strong>：每个角色有多个立绘，根据情绪实时调整</li><li><strong>多模态输出</strong>：支持文本、语音、表情立绘的同步呈现</li><li><strong>长期记忆系统</strong>：向量数据库存储对话历史，让角色永远记得和你的故事</li><li><strong>高度可定制</strong>：用户可创建自定义角色</li></ul><h2 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h2><ul><li>本项目为个人非营利性兴趣项目，无意且不参与任何形式的同业竞争。</li><li>本项目采用GNU通用公共许可证(GPL)开源协议，禁止闭源商业化改造。详见<a href="LICENSE">GNU General Public License v3.0</a></li><li>使用者需自行承担因调用第三方AI服务产生的API费用，此类费用与项目作者无关</li><li>本项目涉及人工智能生成内容，作者不对AI生成内容的准确性、合法性及可能引发的后果承担任何责任。</li><li>欢迎提出建设性意见或提交Pull Requests，但作者保留是否采纳的最终决定权，建议提前和作者联系。</li><li>作者保留对本声明条款的最终解释权及修改权。</li></ul><h2 id="功能特点" tabindex="-1"><a class="header-anchor" href="#功能特点"><span>功能特点</span></a></h2><ul><li>与AI模型进行自然对话，流式输出</li><li>多角色系统，可切换不同的AI角色</li><li>动态生成背景图片，提供沉浸式体验</li><li>角色立绘动态显示，增强视觉效果</li><li>语音合成，多模态输出</li><li>对话历史记录查看</li><li>响应式设计，适配不同设备</li></ul><h2 id="安装说明" tabindex="-1"><a class="header-anchor" href="#安装说明"><span>安装说明</span></a></h2><h3 id="📦-一键包-较为推荐-极简" tabindex="-1"><a class="header-anchor" href="#📦-一键包-较为推荐-极简"><span>📦 一键包，较为推荐，极简</span></a></h3><p>使用类似软件一样的UI，老奶奶都能够部署（某位不愿透漏真名的作者说的）</p><h4 id="_1-下载压缩包" tabindex="-1"><a class="header-anchor" href="#_1-下载压缩包"><span>1. 下载压缩包</span></a></h4><p>从原版下载<a href="https://github.com/leletxh/CABM-run/releases" target="_blank" rel="noopener noreferrer">戳我打开发布页面</a></p><p>下载做新版的<code>.zip</code>文件</p><p>解压，点击<code>启动器.exe</code>就行了</p>',19)),e("h5",m,[e("a",b,[e("span",null,[s[24]||(s[24]=n("冷知识，如果你打不开上面的页面，不妨看看",-1)),a(t,{to:"/deploy-docs/VISTR_GITHUB.html"},{default:l(()=>s[23]||(s[23]=[n("如何加速",-1)])),_:1,__:[23]})])])]),s[45]||(s[45]=d(`<h4 id="_2-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-配置环境变量"><span>2. 配置环境变量</span></a></h4><p>可以在弹出的窗口设置 也按照下方<a href="#_2-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置环境变量</a>部分的说明进行配置。</p><h3 id="🐳-docker-快速部署-推荐-但要软件" tabindex="-1"><a class="header-anchor" href="#🐳-docker-快速部署-推荐-但要软件"><span>🐳 Docker 快速部署（推荐，但要软件）</span></a></h3><h4 id="🚀-直接拉取镜像部署-最简单" tabindex="-1"><a class="header-anchor" href="#🚀-直接拉取镜像部署-最简单"><span>🚀 直接拉取镜像部署（最简单）</span></a></h4><p>无需克隆代码，直接使用预构建镜像：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Linux/macOS 一键部署</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-o</span> deploy.sh https://raw.githubusercontent.com/xhc2008/CABM/main/deploy.sh</span>
<span class="line highlighted"><span class="token function">chmod</span> +x deploy.sh</span>
<span class="line">./deploy.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell"><pre><code><span class="line"><span class="token comment"># Windows PowerShell 一键部署</span></span>
<span class="line"><span class="token function">Invoke-WebRequest</span> <span class="token operator">-</span>Uri <span class="token string">&quot;https://raw.githubusercontent.com/xhc2008/CABM/main/deploy.ps1&quot;</span> <span class="token operator">-</span>OutFile <span class="token string">&quot;deploy.ps1&quot;</span></span>
<span class="line highlighted">PowerShell <span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>File deploy<span class="token punctuation">.</span>ps1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)),e("p",null,[e("strong",null,[a(t,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:l(()=>s[25]||(s[25]=[n("📖 Docker 部署详细文档",-1)])),_:1,__:[25]})])]),s[46]||(s[46]=d(`<h4 id="源码构建部署" tabindex="-1"><a class="header-anchor" href="#源码构建部署"><span>源码构建部署</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 克隆项目</span></span>
<span class="line"><span class="token function">git</span> clone https://github.com/xhc2008/CABM.git</span>
<span class="line"><span class="token builtin class-name">cd</span> CABM</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 一键部署</span></span>
<span class="line highlighted">./deploy.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="手动部署" tabindex="-1"><a class="header-anchor" href="#手动部署"><span>手动部署</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 1. 配置环境变量</span></span>
<span class="line"><span class="token function">cp</span> .env.docker .env.docker</span>
<span class="line"><span class="token comment"># 编辑 .env.docker 文件，填入你的 API 密钥</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 启动服务</span></span>
<span class="line highlighted">./deploy-docker.sh start</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 访问应用</span></span>
<span class="line"><span class="token comment"># http://localhost:5000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量"><span>配置环境变量</span></a></h4><p>按照下方<a href="#_2-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置环境变量</a>部分的说明进行配置。 也可以在UI中配置</p><p><strong>更多部署选项：</strong></p>`,7)),e("ul",null,[e("li",null,[a(t,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:l(()=>s[26]||(s[26]=[n("📖 Docker 镜像直接拉取部署指南",-1)])),_:1,__:[26]})])]),s[47]||(s[47]=d(`<h4 id="docker-管理命令" tabindex="-1"><a class="header-anchor" href="#docker-管理命令"><span>Docker 管理命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./docker-start.sh start      <span class="token comment"># 启动服务</span></span>
<span class="line">./docker-start.sh stop       <span class="token comment"># 停止服务</span></span>
<span class="line">./docker-start.sh restart    <span class="token comment"># 重启服务</span></span>
<span class="line">./docker-start.sh logs       <span class="token comment"># 查看日志</span></span>
<span class="line">./docker-start.sh status     <span class="token comment"># 查看状态</span></span>
<span class="line">./docker-start.sh package    <span class="token comment"># 打包镜像</span></span>
<span class="line">./docker-start.sh cleanup    <span class="token comment"># 清理资源</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="📦-conda安装方式" tabindex="-1"><a class="header-anchor" href="#📦-conda安装方式"><span>📦 conda安装方式</span></a></h3><p>使用conda可以更好地管理Python环境和依赖包，推荐有conda使用经验的用户选择此方式。</p><h4 id="_2-创建conda环境" tabindex="-1"><a class="header-anchor" href="#_2-创建conda环境"><span>2. 创建conda环境</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 创建新的conda环境，Python版本3.10+</span></span>
<span class="line">conda create <span class="token parameter variable">-n</span> cabm <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.11</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-激活环境" tabindex="-1"><a class="header-anchor" href="#_3-激活环境"><span>3. 激活环境</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 激活conda环境</span></span>
<span class="line">conda activate cabm</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-安装依赖" tabindex="-1"><a class="header-anchor" href="#_4-安装依赖"><span>4. 安装依赖</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用pip安装项目依赖</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者如果项目提供了conda环境文件，也可以使用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">conda <span class="token function">env</span> create <span class="token parameter variable">-f</span> environment.yml <span class="token parameter variable">-p</span> .conda</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_5-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_5-配置环境变量"><span>5. 配置环境变量</span></a></h4><p>按照下方<a href="#_2-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">配置环境变量</a>部分的说明进行配置。 也可以在UI中配置</p><h4 id="_6-启动应用" tabindex="-1"><a class="header-anchor" href="#_6-启动应用"><span>6. 启动应用</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 确保conda环境已激活</span></span>
<span class="line">conda activate cabm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动应用</span></span>
<span class="line">python start.py</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="conda环境管理" tabindex="-1"><a class="header-anchor" href="#conda环境管理"><span>conda环境管理</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 激活环境</span></span>
<span class="line">conda activate cabm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 退出环境</span></span>
<span class="line">conda deactivate</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除环境（如需重新安装）</span></span>
<span class="line">conda remove <span class="token parameter variable">-p</span> .conda <span class="token parameter variable">--all</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看已安装的包</span></span>
<span class="line">conda list</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 导出环境配置</span></span>
<span class="line">conda <span class="token function">env</span> <span class="token builtin class-name">export</span> <span class="token operator">&gt;</span> environment.yml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="📦-传统安装方式" tabindex="-1"><a class="header-anchor" href="#📦-传统安装方式"><span>📦 传统安装方式</span></a></h3><h4 id="_1-安装依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装依赖"><span>1. 安装依赖</span></a></h4><p>使用 pip 安装项目依赖：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-配置环境变量-1" tabindex="-1"><a class="header-anchor" href="#_2-配置环境变量-1"><span>2. 配置环境变量</span></a></h4><p>复制<code>.env.example</code>文件为<code>.env</code>，并填写API密钥和URL：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">cp</span> .env.example .env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>编辑<code>.env</code>文件，填写API_KEY（将里面所有的<code>your_api_key_here</code>替换成你的API密钥）。 需前往<a href="https://cloud.siliconflow.cn/i/mVqMyTZk" target="_blank" rel="noopener noreferrer">硅基流动平台</a>申请你的API Key； 如果使用其他平台或模型，需要替换对应的API_BASE_URL和MODEL</p>`,26)),e("h4",v,[e("a",g,[e("span",null,[s[28]||(s[28]=n("如果你的显卡较好推荐",-1)),a(t,{to:"/deploy-docs/TTS_GPTSoVITS.html"},{default:l(()=>s[27]||(s[27]=[n("使用GPT-SoVITS语音合成",-1)])),_:1,__:[27]})])])]),e("h4",k,[e("a",f,[e("span",null,[a(t,{to:"/deploy-docs/TTS_SIL.html"},{default:l(()=>s[29]||(s[29]=[n("硅基流动的详细使用说明",-1)])),_:1,__:[29]})])])]),s[48]||(s[48]=d(`<h3 id="🚀-docker-优势" tabindex="-1"><a class="header-anchor" href="#🚀-docker-优势"><span>🚀 Docker 优势</span></a></h3><ul><li><strong>一键部署</strong>：无需手动安装依赖，自动配置环境</li><li><strong>环境隔离</strong>：避免与其他应用冲突</li><li><strong>跨平台</strong>：支持 Linux、Windows、macOS</li><li><strong>易于管理</strong>：统一的启动、停止、重启命令</li><li><strong>生产就绪</strong>：包含健康检查和自动重启</li><li><strong>资源限制</strong>：可控制内存和CPU使用</li></ul><h3 id="📋-环境要求" tabindex="-1"><a class="header-anchor" href="#📋-环境要求"><span>📋 环境要求</span></a></h3><h4 id="docker-环境" tabindex="-1"><a class="header-anchor" href="#docker-环境"><span>Docker 环境</span></a></h4><ul><li>Docker 20.10+</li><li>Docker Compose 2.0+</li><li>2GB以上的可用内存</li><li>1GB以上的可用存储空间</li></ul><h4 id="传统环境" tabindex="-1"><a class="header-anchor" href="#传统环境"><span>传统环境</span></a></h4><ul><li>Python 3.8+</li><li>500MB以上的可用存储空间</li></ul><h2 id="使用说明" tabindex="-1"><a class="header-anchor" href="#使用说明"><span>使用说明</span></a></h2><h3 id="启动应用" tabindex="-1"><a class="header-anchor" href="#启动应用"><span>启动应用</span></a></h3><h4 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h4><p>双击 <code>start.bat</code> 文件或在命令行中运行：</p><div class="language-cmd line-numbers-mode" data-highlighter="prismjs" data-ext="cmd"><pre><code><span class="line">start.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="linux-macos" tabindex="-1"><a class="header-anchor" href="#linux-macos"><span>Linux/macOS</span></a></h4><p>确保脚本有执行权限：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">chmod</span> +x start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后运行：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="高级选项" tabindex="-1"><a class="header-anchor" href="#高级选项"><span>高级选项</span></a></h4><p>你也可以直接使用Python启动脚本，并传递额外的参数：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">python start.py <span class="token parameter variable">--host</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">--port</span> <span class="token number">8080</span> <span class="token parameter variable">--debug</span> --no-browser</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可用参数：</p><ul><li><code>--host</code>: 指定主机地址（默认为配置文件中的值）</li><li><code>--port</code>: 指定端口号（默认为配置文件中的值）</li><li><code>--debug</code>: 启用调试模式</li><li><code>--no-browser</code>: 不自动打开浏览器</li></ul><p>启动后，应用会自动在浏览器中打开。程序会智能选择最合适的本地IP地址（优先使用192.168开头的地址），确保在各种浏览器中都能正常访问。</p><p>你也可以手动访问以下地址：</p><ul><li>本地访问：<code>http://localhost:5000</code> 或 <code>http://127.0.0.1:5000</code></li><li>局域网访问：<code>http://[你的本地IP]:5000</code>（启动时会显示具体地址）</li></ul><h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作"><span>基本操作</span></a></h3><ul><li><strong>发送消息</strong>：在右上角输入框中输入消息，点击&quot;发送&quot;按钮或按回车键发送</li><li><strong>查看历史</strong>：点击&quot;历史&quot;按钮查看完整对话历史</li><li><strong>切换角色</strong>：点击&quot;角色&quot;按钮选择不同的AI角色</li><li><strong>播放语音</strong>：点击&quot;播放语音&quot;按钮再次播放语音</li><li><strong>更换背景</strong>：点击&quot;更换背景&quot;按钮生成新的背景图片</li></ul><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>频繁更换背景会429，导致无法切换</li><li>手机可以访问，但是排版会有问题</li></ul><h2 id="自定义角色" tabindex="-1"><a class="header-anchor" href="#自定义角色"><span>自定义角色</span></a></h2><p>现在可以在前端UI自定义角色。你需要准备：</p><ul><li>角色的<strong>无背景</strong>立绘（如果有多个，尽量保持角色的大小相同）</li><li>角色的简介（包括给人看的和给AI看的）</li><li>角色的一句语音及其文本，3-10秒（非必须，但想要使用语音就必须上传）</li><li>角色的详细信息、背景故事等等，需要按要求整理好（非必须）</li></ul><h2 id="贡献-按周结算没有并不代表没有" tabindex="-1"><a class="header-anchor" href="#贡献-按周结算没有并不代表没有"><span>贡献，按周结算没有并不代表没有</span></a></h2><p><a href="https://github.com/xhc2008/CABM/graphs/contributors" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/contributors/xhc2008/CABM?color=blue" alt="Contributors"></a></p><p><img src="https://contrib.rocks/image?repo=xhc2008/CABM" alt="Contributors"></p><p>欢迎提交 Pull Request 或 Issue！<s>(但不一定会做)</s></p>`,36)),e("p",null,[s[31]||(s[31]=n("具体贡献流程请参考",-1)),a(t,{to:"/CONTRIBUTING.html"},{default:l(()=>s[30]||(s[30]=[n("CONTRIBUTING.md",-1)])),_:1,__:[30]})]),s[49]||(s[49]=e("h2",{id:"📚-文档索引",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#📚-文档索引"},[e("span",null,"📚 文档索引")])],-1)),s[50]||(s[50]=e("h3",{id:"部署文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#部署文档"},[e("span",null,"部署文档")])],-1)),e("ul",null,[e("li",null,[a(t,{to:"/deploy-docs/DOCKER_PULL_GUIDE.html"},{default:l(()=>s[32]||(s[32]=[n("📖 Docker 镜像直接拉取部署指南",-1)])),_:1,__:[32]}),s[33]||(s[33]=n(" - ",-1)),s[34]||(s[34]=e("strong",null,"推荐：无需源码，直接拉取镜像部署",-1))]),e("li",null,[a(t,{to:"/deploy-docs/WINDOWS_DEPLOY_GUIDE.html"},{default:l(()=>s[35]||(s[35]=[n("Windows 部署指南",-1)])),_:1,__:[35]}),s[36]||(s[36]=n(" - Windows 环境部署",-1))]),e("li",null,[a(t,{to:"/deploy-docs/DOCKER_SOLUTION.html"},{default:l(()=>s[37]||(s[37]=[n("Docker 问题解决方案",-1)])),_:1,__:[37]}),s[38]||(s[38]=n(" - 常见问题及解决方案",-1))])]),s[51]||(s[51]=e("h3",{id:"功能文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#功能文档"},[e("span",null,"功能文档")])],-1)),e("ul",null,[e("li",null,[a(t,{to:"/deploy-docs/TTS_GPTSoVITS.html"},{default:l(()=>s[39]||(s[39]=[n("TTS GPT-SoVITS 配置",-1)])),_:1,__:[39]}),s[40]||(s[40]=n(" - 语音合成服务配置",-1))])]),s[52]||(s[52]=e("h3",{id:"开发文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开发文档"},[e("span",null,"开发文档")])],-1)),e("ul",null,[e("li",null,[a(t,{to:"/CONTRIBUTING.html"},{default:l(()=>s[41]||(s[41]=[n("贡献指南",-1)])),_:1,__:[41]}),s[42]||(s[42]=n(" - 如何参与项目开发",-1))])]),s[53]||(s[53]=e("h2",{id:"许可证",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#许可证"},[e("span",null,"许可证")])],-1)),s[54]||(s[54]=e("p",null,[e("a",{href:"LICENSE"},"GNU General Public License v3.0")],-1))])}const I=o(u,[["render",x]]),E=JSON.parse('{"path":"/get-started.html","title":"快速开始","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"快速开始","description":"CABM 项目的快速开始指南，包含安装说明和使用教程"},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"开发状态","slug":"开发状态","link":"#开发状态","children":[]},{"level":2,"title":"项目简介","slug":"项目简介","link":"#项目简介","children":[]},{"level":2,"title":"声明","slug":"声明","link":"#声明","children":[]},{"level":2,"title":"功能特点","slug":"功能特点","link":"#功能特点","children":[]},{"level":2,"title":"安装说明","slug":"安装说明","link":"#安装说明","children":[{"level":3,"title":"📦 一键包，较为推荐，极简","slug":"📦-一键包-较为推荐-极简","link":"#📦-一键包-较为推荐-极简","children":[]},{"level":3,"title":"🐳 Docker 快速部署（推荐，但要软件）","slug":"🐳-docker-快速部署-推荐-但要软件","link":"#🐳-docker-快速部署-推荐-但要软件","children":[]},{"level":3,"title":"📦 conda安装方式","slug":"📦-conda安装方式","link":"#📦-conda安装方式","children":[]},{"level":3,"title":"📦 传统安装方式","slug":"📦-传统安装方式","link":"#📦-传统安装方式","children":[]},{"level":3,"title":"🚀 Docker 优势","slug":"🚀-docker-优势","link":"#🚀-docker-优势","children":[]},{"level":3,"title":"📋 环境要求","slug":"📋-环境要求","link":"#📋-环境要求","children":[]}]},{"level":2,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[{"level":3,"title":"启动应用","slug":"启动应用","link":"#启动应用","children":[]},{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"自定义角色","slug":"自定义角色","link":"#自定义角色","children":[]},{"level":2,"title":"贡献，按周结算没有并不代表没有","slug":"贡献-按周结算没有并不代表没有","link":"#贡献-按周结算没有并不代表没有","children":[]},{"level":2,"title":"📚 文档索引","slug":"📚-文档索引","link":"#📚-文档索引","children":[{"level":3,"title":"部署文档","slug":"部署文档","link":"#部署文档","children":[]},{"level":3,"title":"功能文档","slug":"功能文档","link":"#功能文档","children":[]},{"level":3,"title":"开发文档","slug":"开发文档","link":"#开发文档","children":[]}]},{"level":2,"title":"许可证","slug":"许可证","link":"#许可证","children":[]}],"git":{"updatedTime":1756311654000,"contributors":[{"name":"2302_76329346","username":"","email":"2302_76329346@noreply.gitcode.com","commits":9},{"name":"FrozenFisher","username":"FrozenFisher","email":"kuw9549@dingtalk.com","commits":1,"url":"https://github.com/FrozenFisher"},{"name":"leletxh","username":"leletxh","email":"144476114+leletxh@users.noreply.github.com","commits":1,"url":"https://github.com/leletxh"},{"name":"xhc2008","username":"xhc2008","email":"13913016861@163.com","commits":1,"url":"https://github.com/xhc2008"}],"changelog":[{"hash":"eed8fbceb755fbedbe2a82e2302299d7c624d628","time":1756311654000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新"},{"hash":"616dcea657d005c6159ce8cb9e6de0e98019e2db","time":1755426162000,"email":"13913016861@163.com","author":"xhc2008","message":"Update get-started.md"},{"hash":"1ad6b6dd1fc8e9d5e77f7a97c6a38110c3532be2","time":1754834067000,"email":"144476114+leletxh@users.noreply.github.com","author":"leletxh","message":"Update get-started.md"},{"hash":"f7f16688ec40ee5acda7139b1f683a71e99b5b83","time":1754378312000,"email":"kuw9549@dingtalk.com","author":"FrozenFisher","message":"增加硅基流动DLC(包含文本情感识别)的配置指南"},{"hash":"2eb331ca2967cf63b6be78213e7bf9bd2eca66bd","time":1754369830000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：修正conda安装部分的环境变量配置说明链接"},{"hash":"27c4a5c287ed5c19bd90e20643bfbe536b47409d","time":1754369015000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：添加conda安装方式及相关步骤"},{"hash":"f38a31e5fb8c54deba89607d6204a3b1e3cd442e","time":1754357614000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新部署文档：删除冗余的Docker部署指南链接"},{"hash":"0a4388fbd9944c1d6389781bb1d554271de5e737","time":1754326977000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"修正Windows PowerShell一键部署代码块的行号标记"},{"hash":"913c7a4c66eb061f2d6aad609a7daaaa20706bc4","time":1754326810000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"删除多个部署相关文档，并更新快速开始指南中的镜像地址和部署脚本链接"},{"hash":"9e7634fdfab34f2e51ac081bc14aae8eff3bb887","time":1754323398000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：为多个部署指南添加语言、标题和描述信息"},{"hash":"5b2e0d6e63a8fb211c06fc13b66361b3953c0c48","time":1754320964000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新README.md和CONTRIBUTING.md，完善功能描述和贡献指南；添加LICENSE文件"},{"hash":"f9c61434bda4cac85d5b9c782b7743cb86d12af5","time":1754306992000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"chore: initialize package.json with project metadata and development dependencies"}]},"filePathRelative":"get-started.md"}');export{I as comp,E as data};
