import{_ as s,c as a,a as t,o as p}from"./app-BvxkGDTV.js";const e={};function l(o,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="gpt-sovits-tts-服务配置指南" tabindex="-1"><a class="header-anchor" href="#gpt-sovits-tts-服务配置指南"><span>GPT-SoVITS TTS 服务配置指南</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>本指南将帮助您配置和使用 GPT-SoVITS 提供的 TTS (Text-to-Speech) 服务。GPT-SoVITS 是一个强大的开源语音合成项目，支持少样本语音克隆和高质量的语音合成功能。</p><h2 id="前置要求" tabindex="-1"><a class="header-anchor" href="#前置要求"><span>前置要求</span></a></h2><ul><li>Python 3.9+</li><li>conda 环境管理器</li><li>GPU GeForce MX330 以上或 CPU i5 10代以上</li><li>requests 库</li><li>足够的存储空间用于模型和音频文件</li></ul><h2 id="系统要求" tabindex="-1"><a class="header-anchor" href="#系统要求"><span>系统要求</span></a></h2><h3 id="硬件要求" tabindex="-1"><a class="header-anchor" href="#硬件要求"><span>硬件要求</span></a></h3><table><thead><tr><th>组件</th><th>最低要求</th><th>推荐配置</th></tr></thead><tbody><tr><td><strong>GPU</strong></td><td>GeForce MX330</td><td>RTX 3060 或更高</td></tr><tr><td><strong>CPU</strong></td><td>i5 10代</td><td>i7 11代或更高</td></tr><tr><td><strong>内存</strong></td><td>8GB</td><td>16GB 或更高</td></tr><tr><td><strong>存储</strong></td><td>10GB 可用空间</td><td>50GB 或更高</td></tr></tbody></table><h3 id="云服务器推荐" tabindex="-1"><a class="header-anchor" href="#云服务器推荐"><span>云服务器推荐</span></a></h3><p>如果本地硬件不满足要求，可以考虑使用云GPU服务：</p><ul><li><a href="https://gpu.spacehpc.com/user/register?inviteCode=83929273" target="_blank" rel="noopener noreferrer">SpaceHPC GPU租赁</a> - 支持Windows系统</li></ul><h2 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置"><span>环境变量配置</span></a></h2><p>在使用 GPT-SoVITS TTS 服务之前，您需要配置以下环境变量：</p><table><thead><tr><th>环境变量</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>TTS_SERVICE_METHOD</code></td><td><code>GPT-SoVITS</code></td><td>TTS 服务类型，设置为 <code>GPT-SoVITS</code></td></tr><tr><td><code>TTS_SERVICE_URL_GPTSoVITS</code></td><td><code>http://127.0.0.1:9880</code></td><td>GPT-SoVITS API 服务地址</td></tr></tbody></table><h3 id="配置示例" tabindex="-1"><a class="header-anchor" href="#配置示例"><span>配置示例</span></a></h3><p><strong>Windows (.env 文件)</strong></p><div class="language-env line-numbers-mode" data-highlighter="prismjs" data-ext="env"><pre><code><span class="line">TTS_SERVICE_METHOD=GPT-SoVITS</span>
<span class="line">TTS_SERVICE_URL_GPTSoVITS=http://127.0.0.1:9880</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Linux/macOS (环境变量)</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">TTS_SERVICE_METHOD</span><span class="token operator">=</span>GPT-SoVITS</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">TTS_SERVICE_URL_GPTSoVITS</span><span class="token operator">=</span>http://127.0.0.1:9880</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装配置" tabindex="-1"><a class="header-anchor" href="#安装配置"><span>安装配置</span></a></h2><h3 id="_1-安装-gpt-sovits" tabindex="-1"><a class="header-anchor" href="#_1-安装-gpt-sovits"><span>1. 安装 GPT-SoVITS</span></a></h3><p>访问官方仓库获取最新版本：</p><ul><li><a href="https://github.com/RVC-Boss/GPT-SoVITS" target="_blank" rel="noopener noreferrer">GPT-SoVITS 官方仓库</a></li></ul><p>按照官方文档完成安装和环境配置。</p><h3 id="_2-启动-api-服务" tabindex="-1"><a class="header-anchor" href="#_2-启动-api-服务"><span>2. 启动 API 服务</span></a></h3><h4 id="使用官方-api" tabindex="-1"><a class="header-anchor" href="#使用官方-api"><span>使用官方 API</span></a></h4><p>进入 GPT-SoVITS 环境，启动官方 API 服务：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">python api_v2.py</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="使用修改版-api-推荐" tabindex="-1"><a class="header-anchor" href="#使用修改版-api-推荐"><span>使用修改版 API（推荐）</span></a></h4><p>由于兼容性需要，建议使用项目提供的修改版 API：</p><ol><li>将项目中的 <code>replace/api_v2.py</code> 替换 GPT-SoVITS 目录下的 <code>api_v2.py</code></li><li>启动修改版 API 服务：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">python api_v2.py</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改版 API 保持与原版相同的端口配置方式，同时实现了通过分析文本情感选择参考音频的功能 让AI的语气更加贴近对话情景</p><h2 id="功能特性" tabindex="-1"><a class="header-anchor" href="#功能特性"><span>功能特性</span></a></h2><h3 id="_1-少样本语音克隆" tabindex="-1"><a class="header-anchor" href="#_1-少样本语音克隆"><span>1. 少样本语音克隆</span></a></h3><ul><li><strong>快速训练</strong>：使用少量参考音频即可克隆声音</li><li><strong>高保真度</strong>：接近原声的音色还原</li><li><strong>多语言支持</strong>：支持中文、英文、日文等多种语言</li></ul><h3 id="_2-自定义模型支持" tabindex="-1"><a class="header-anchor" href="#_2-自定义模型支持"><span>2. 自定义模型支持</span></a></h3><ul><li><strong>GPT 模型</strong>：控制语音的韵律和节奏</li><li><strong>SoVITS 模型</strong>：负责音色的精确还原</li><li><strong>模型热加载</strong>：支持动态切换不同角色模型</li></ul><h3 id="_3-支持的音频格式" tabindex="-1"><a class="header-anchor" href="#_3-支持的音频格式"><span>3. 支持的音频格式</span></a></h3><ul><li><strong>输入格式</strong>：WAV 文件（用于参考音频）</li><li><strong>输出格式</strong>：WAV, MP3 等常见格式</li><li><strong>采样率</strong>：支持多种采样率配置</li></ul><h2 id="角色配置" tabindex="-1"><a class="header-anchor" href="#角色配置"><span>角色配置</span></a></h2><h3 id="_1-目录结构" tabindex="-1"><a class="header-anchor" href="#_1-目录结构"><span>1. 目录结构</span></a></h3><p>确保您的项目具有以下目录结构：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">GPT-SoVITS/</span>
<span class="line">├── role/</span>
<span class="line">│   ├── 角色名1/</span>
<span class="line">│   │   ├── config.json</span>
<span class="line">│   │   ├── reference.wav</span>
<span class="line">│   │   ├── BERT/ # 可选：自定义文本情感分析模型</span>
<span class="line">│   │   ├── refAudio/ # 可选：自定义多情感参考音频</span>
<span class="line">│   │   ├── character-gpt.ckpt      # 可选：自定义GPT模型</span>
<span class="line">│   │   └── character-sovits.pth    # 可选：自定义SoVITS模型</span>
<span class="line"></span>
<span class="line">│   ├── 角色名2/</span>
<span class="line">│   │   ├── config.json</span>
<span class="line">│   │   └── reference.wav</span>
<span class="line">│   └── ...</span>
<span class="line">├── api_v2.py</span>
<span class="line">└── ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置文件格式" tabindex="-1"><a class="header-anchor" href="#_2-配置文件格式"><span>2. 配置文件格式</span></a></h3><h4 id="基础配置-仅单独参考音频" tabindex="-1"><a class="header-anchor" href="#基础配置-仅单独参考音频"><span>基础配置（仅单独参考音频）</span></a></h4><p>在角色文件夹下创建 <code>config.json</code>：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;ref_audio&quot;</span><span class="token operator">:</span> <span class="token string">&quot;reference.wav&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ref_text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;骇入空间站的时候，我随手改了下螺丝咕姆的画像，不过…最后还是改回去了&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ref_lang&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zh&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="高级配置-包含自定义模型" tabindex="-1"><a class="header-anchor" href="#高级配置-包含自定义模型"><span>高级配置（包含自定义模型）</span></a></h4><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;ref_audio&quot;</span><span class="token operator">:</span> <span class="token string">&quot;reference.wav&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ref_text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;骇入空间站的时候，我随手改了下螺丝咕姆的画像，不过…最后还是改回去了&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ref_lang&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;gpt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;character-gpt.ckpt&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;sovits&quot;</span><span class="token operator">:</span> <span class="token string">&quot;character-sovits.pth&quot;</span></span>
<span class="line">    <span class="token property">&quot;BERTmodel&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BERT/&quot;</span></span>
<span class="line">    <span class="token property">&quot;multiREF&quot;</span><span class="token operator">:</span> <span class="token string">&quot;refAudio/&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-配置参数说明" tabindex="-1"><a class="header-anchor" href="#_3-配置参数说明"><span>3. 配置参数说明</span></a></h3><table><thead><tr><th>参数</th><th>类型</th><th>必需</th><th>说明</th></tr></thead><tbody><tr><td><code>ref_audio</code></td><td>string</td><td>✓</td><td>参考音频文件名</td></tr><tr><td><code>ref_text</code></td><td>string</td><td>✓</td><td>参考音频对应的文本内容</td></tr><tr><td><code>ref_lang</code></td><td>string</td><td>✓</td><td>参考文本语言（zh/en/ja等）</td></tr><tr><td><code>BERTmodel</code></td><td>string</td><td>✗</td><td>自定义文本情感分析模型</td></tr><tr><td><code>multiREF</code></td><td>string</td><td>✗</td><td>自定义多情感参考音频</td></tr><tr><td><code>gpt</code></td><td>string</td><td>✗</td><td>自定义GPT模型文件名</td></tr><tr><td><code>sovits</code></td><td>string</td><td>✗</td><td>自定义SoVITS模型文件名</td></tr></tbody></table><h3 id="_4-参考音频要求" tabindex="-1"><a class="header-anchor" href="#_4-参考音频要求"><span>4. 参考音频要求</span></a></h3><ul><li><strong>格式</strong>：WAV 格式，16kHz 或 22kHz 采样率</li><li><strong>时长</strong>：建议 3-10 秒</li><li><strong>质量</strong>：清晰无噪音，音量适中</li><li><strong>内容</strong>：包含丰富的音调变化</li></ul><h2 id="语音合成模型训练-可选" tabindex="-1"><a class="header-anchor" href="#语音合成模型训练-可选"><span>语音合成模型训练（可选）</span></a></h2><h3 id="_1-数据准备" tabindex="-1"><a class="header-anchor" href="#_1-数据准备"><span>1. 数据准备</span></a></h3><p>如需训练自定义模型以提高音色还原度：</p><ul><li><strong>音频数据</strong>：准备 10-30 分钟的高质量音频</li><li><strong>文本标注</strong>：确保音频与文本完全对应</li><li><strong>数据清理</strong>：移除噪音、静音段等</li></ul><h3 id="_2-训练流程" tabindex="-1"><a class="header-anchor" href="#_2-训练流程"><span>2. 训练流程</span></a></h3><ol><li><strong>数据预处理</strong>：音频切分、文本对齐</li><li><strong>SoVITS 训练</strong>：训练音色模型</li><li><strong>GPT 训练</strong>：训练韵律模型</li><li><strong>模型验证</strong>：测试合成效果</li></ol><p>详细训练步骤请参考 <a href="https://github.com/RVC-Boss/GPT-SoVITS" target="_blank" rel="noopener noreferrer">GPT-SoVITS 官方文档</a>。</p><h2 id="情感分析模型训练-可选" tabindex="-1"><a class="header-anchor" href="#情感分析模型训练-可选"><span>情感分析模型训练（可选）</span></a></h2><p>如果你有自定义的角色，请根据以下指引自己训练分类模型并收集对应参考音频</p><h3 id="_1-准备训练数据" tabindex="-1"><a class="header-anchor" href="#_1-准备训练数据"><span>1. 准备训练数据</span></a></h3><p>首先需要准备情感分类的训练数据。数据格式如下： （提示：请为每个label准备至少5个数据，推荐准备10个）</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">finetune_examples <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;今天真是太开心了！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 高兴</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;唉，心情有点低落...&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 悲伤</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;哼，真是让人生气！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 愤怒</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;哇，太惊讶了！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 惊讶</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;好可怕...&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 恐惧</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;真恶心...&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 厌恶</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;你好。&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 中性</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;好害羞啊...&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 害羞</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;太棒了！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 兴奋</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;很舒服。&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 舒适</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;有点紧张...&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 紧张</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;我喜欢你。&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 爱慕</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;好委屈...&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 委屈</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;我很厉害！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 骄傲</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;这是什么？&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment"># 困惑</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-训练脚本" tabindex="-1"><a class="header-anchor" href="#_2-训练脚本"><span>2. 训练脚本</span></a></h3><p>1.准备python3.8+的环境 2.按照脚本安装依赖 3.创建训练脚本 <code>train_emotion_model.py</code>：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> transformers <span class="token keyword">import</span> BertTokenizer<span class="token punctuation">,</span> BertForSequenceClassification<span class="token punctuation">,</span> Trainer<span class="token punctuation">,</span> TrainingArguments</span>
<span class="line"><span class="token keyword">from</span> transformers <span class="token keyword">import</span> DataCollatorWithPadding</span>
<span class="line"><span class="token keyword">from</span> datasets <span class="token keyword">import</span> Dataset</span>
<span class="line"><span class="token keyword">import</span> torch</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> KFold</span>
<span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score<span class="token punctuation">,</span> precision_recall_fscore_support</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">compute_metrics</span><span class="token punctuation">(</span>pred<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;计算评估指标&quot;&quot;&quot;</span></span>
<span class="line">    labels <span class="token operator">=</span> pred<span class="token punctuation">.</span>label_ids</span>
<span class="line">    preds <span class="token operator">=</span> pred<span class="token punctuation">.</span>predictions<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    precision<span class="token punctuation">,</span> recall<span class="token punctuation">,</span> f1<span class="token punctuation">,</span> _ <span class="token operator">=</span> precision_recall_fscore_support<span class="token punctuation">(</span>labels<span class="token punctuation">,</span> preds<span class="token punctuation">,</span> average<span class="token operator">=</span><span class="token string">&#39;weighted&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    acc <span class="token operator">=</span> accuracy_score<span class="token punctuation">(</span>labels<span class="token punctuation">,</span> preds<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;accuracy&#39;</span><span class="token punctuation">:</span> acc<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;f1&#39;</span><span class="token punctuation">:</span> f1<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;precision&#39;</span><span class="token punctuation">:</span> precision<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;recall&#39;</span><span class="token punctuation">:</span> recall</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查并创建输出目录</span></span>
<span class="line">output_dir <span class="token operator">=</span> <span class="token string">&quot;./results&quot;</span></span>
<span class="line">saved_model_dir <span class="token operator">=</span> <span class="token string">&quot;./saved_model&quot;</span></span>
<span class="line">os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>output_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>saved_model_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设备检查</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;检查可用设备...&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    device <span class="token operator">=</span> <span class="token string">&quot;cuda&quot;</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;使用CUDA设备&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>mps<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    device <span class="token operator">=</span> <span class="token string">&quot;cpu&quot;</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;检测到MPS设备，但使用CPU以避免兼容性问题&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    device <span class="token operator">=</span> <span class="token string">&quot;cpu&quot;</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;使用CPU设备&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 数据增强</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">augment_data</span><span class="token punctuation">(</span>examples<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;简单的数据增强&quot;&quot;&quot;</span></span>
<span class="line">    augmented_examples <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> example <span class="token keyword">in</span> examples<span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 原始样本</span></span>
<span class="line">        augmented_examples<span class="token punctuation">.</span>append<span class="token punctuation">(</span>example<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 变体1：添加标点符号</span></span>
<span class="line">        text <span class="token operator">=</span> example<span class="token punctuation">[</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> text<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;？&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;。&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;~&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            variant1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> text <span class="token operator">+</span> <span class="token string">&quot;！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">            augmented_examples<span class="token punctuation">.</span>append<span class="token punctuation">(</span>variant1<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 变体2：重复关键词</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token string">&quot;开心&quot;</span> <span class="token keyword">in</span> text <span class="token keyword">or</span> <span class="token string">&quot;高兴&quot;</span> <span class="token keyword">in</span> text <span class="token keyword">or</span> <span class="token string">&quot;棒&quot;</span> <span class="token keyword">in</span> text<span class="token punctuation">:</span></span>
<span class="line">            variant2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;！&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;！太棒了！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">            augmented_examples<span class="token punctuation">.</span>append<span class="token punctuation">(</span>variant2<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 变体3：添加语气词</span></span>
<span class="line">        <span class="token keyword">if</span> example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 高兴、兴奋</span></span>
<span class="line">            variant3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;哇！&quot;</span> <span class="token operator">+</span> text<span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">            augmented_examples<span class="token punctuation">.</span>append<span class="token punctuation">(</span>variant3<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elif</span> example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 悲伤、委屈</span></span>
<span class="line">            variant3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;唉，&quot;</span> <span class="token operator">+</span> text<span class="token punctuation">,</span> <span class="token string">&quot;label&quot;</span><span class="token punctuation">:</span> example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">            augmented_examples<span class="token punctuation">.</span>append<span class="token punctuation">(</span>variant3<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> augmented_examples</span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在进行数据增强...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">augmented_examples <span class="token operator">=</span> augment_data<span class="token punctuation">(</span>finetune_examples<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;数据增强后样本数: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>augmented_examples<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> (原始: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>finetune_examples<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 准备数据集</span></span>
<span class="line">texts <span class="token operator">=</span> <span class="token punctuation">[</span>example<span class="token punctuation">[</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">]</span> <span class="token keyword">for</span> example <span class="token keyword">in</span> augmented_examples<span class="token punctuation">]</span></span>
<span class="line">labels <span class="token operator">=</span> <span class="token punctuation">[</span>example<span class="token punctuation">[</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">]</span> <span class="token keyword">for</span> example <span class="token keyword">in</span> augmented_examples<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载预训练模型</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在加载预训练模型...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">tokenizer <span class="token operator">=</span> BertTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">&quot;bert-base-chinese&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 对数据进行tokenization</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;正在处理数据...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">tokenized_data <span class="token operator">=</span> tokenizer<span class="token punctuation">(</span>texts<span class="token punctuation">,</span> truncation<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">128</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建数据集</span></span>
<span class="line">dataset <span class="token operator">=</span> Dataset<span class="token punctuation">.</span>from_dict<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;input_ids&quot;</span><span class="token punctuation">:</span> tokenized_data<span class="token punctuation">[</span><span class="token string">&quot;input_ids&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;attention_mask&quot;</span><span class="token punctuation">:</span> tokenized_data<span class="token punctuation">[</span><span class="token string">&quot;attention_mask&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;labels&quot;</span><span class="token punctuation">:</span> labels</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;总数据集大小: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>dataset<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># K折交叉验证设置</span></span>
<span class="line">k_folds <span class="token operator">=</span> <span class="token number">5</span></span>
<span class="line">kfold <span class="token operator">=</span> KFold<span class="token punctuation">(</span>n_splits<span class="token operator">=</span>k_folds<span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 存储每折的结果</span></span>
<span class="line">fold_results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">best_fold_score <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">best_fold_model <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;开始</span><span class="token interpolation"><span class="token punctuation">{</span>k_folds<span class="token punctuation">}</span></span><span class="token string">折交叉验证训练...&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> fold<span class="token punctuation">,</span> <span class="token punctuation">(</span>train_idx<span class="token punctuation">,</span> val_idx<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>kfold<span class="token punctuation">.</span>split<span class="token punctuation">(</span>dataset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n=== 第 </span><span class="token interpolation"><span class="token punctuation">{</span>fold <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> 折训练 ===&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 分割数据集</span></span>
<span class="line">    train_dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span>select<span class="token punctuation">(</span>train_idx<span class="token punctuation">)</span></span>
<span class="line">    val_dataset <span class="token operator">=</span> dataset<span class="token punctuation">.</span>select<span class="token punctuation">(</span>val_idx<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;训练集大小: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>train_dataset<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;验证集大小: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>val_dataset<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 为每一折重新创建模型</span></span>
<span class="line">    model <span class="token operator">=</span> BertForSequenceClassification<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">&quot;bert-base-chinese&quot;</span><span class="token punctuation">,</span> num_labels<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 训练参数</span></span>
<span class="line">    training_args <span class="token operator">=</span> TrainingArguments<span class="token punctuation">(</span></span>
<span class="line">        output_dir<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>output_dir<span class="token punctuation">}</span></span><span class="token string">/fold_</span><span class="token interpolation"><span class="token punctuation">{</span>fold <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        num_train_epochs<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        per_device_train_batch_size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">        per_device_eval_batch_size<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">        learning_rate<span class="token operator">=</span><span class="token number">2e-5</span><span class="token punctuation">,</span></span>
<span class="line">        warmup_steps<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span></span>
<span class="line">        weight_decay<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span></span>
<span class="line">        logging_dir<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;./logs/fold_</span><span class="token interpolation"><span class="token punctuation">{</span>fold <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">        eval_strategy<span class="token operator">=</span><span class="token string">&quot;epoch&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        save_strategy<span class="token operator">=</span><span class="token string">&quot;epoch&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        save_total_limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        load_best_model_at_end<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        metric_for_best_model<span class="token operator">=</span><span class="token string">&quot;f1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        greater_is_better<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        report_to<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span></span>
<span class="line">        no_cuda<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        dataloader_pin_memory<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span></span>
<span class="line">        gradient_accumulation_steps<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">        fp16<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span></span>
<span class="line">        remove_unused_columns<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 创建Trainer</span></span>
<span class="line">    trainer <span class="token operator">=</span> Trainer<span class="token punctuation">(</span></span>
<span class="line">        model<span class="token operator">=</span>model<span class="token punctuation">,</span></span>
<span class="line">        args<span class="token operator">=</span>training_args<span class="token punctuation">,</span></span>
<span class="line">        train_dataset<span class="token operator">=</span>train_dataset<span class="token punctuation">,</span></span>
<span class="line">        eval_dataset<span class="token operator">=</span>val_dataset<span class="token punctuation">,</span></span>
<span class="line">        data_collator<span class="token operator">=</span>DataCollatorWithPadding<span class="token punctuation">(</span>tokenizer<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        compute_metrics<span class="token operator">=</span>compute_metrics<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 开始训练</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;开始第 </span><span class="token interpolation"><span class="token punctuation">{</span>fold <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> 折训练...&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    trainer<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 在验证集上评估</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;第 </span><span class="token interpolation"><span class="token punctuation">{</span>fold <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> 折验证集评估...&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    eval_results <span class="token operator">=</span> trainer<span class="token punctuation">.</span>evaluate<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    fold_results<span class="token punctuation">.</span>append<span class="token punctuation">(</span>eval_results<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;第 </span><span class="token interpolation"><span class="token punctuation">{</span>fold <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> 折结果: </span><span class="token interpolation"><span class="token punctuation">{</span>eval_results<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 保存最佳模型</span></span>
<span class="line">    <span class="token keyword">if</span> eval_results<span class="token punctuation">[</span><span class="token string">&#39;eval_f1&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> best_fold_score<span class="token punctuation">:</span></span>
<span class="line">        best_fold_score <span class="token operator">=</span> eval_results<span class="token punctuation">[</span><span class="token string">&#39;eval_f1&#39;</span><span class="token punctuation">]</span></span>
<span class="line">        best_fold_model <span class="token operator">=</span> trainer<span class="token punctuation">.</span>model</span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 清理内存</span></span>
<span class="line">    <span class="token keyword">del</span> trainer</span>
<span class="line">    <span class="token keyword">del</span> model</span>
<span class="line">    torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>empty_cache<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 计算平均结果</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n=== </span><span class="token interpolation"><span class="token punctuation">{</span>k_folds<span class="token punctuation">}</span></span><span class="token string">折交叉验证结果 ===&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">avg_accuracy <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">[</span>result<span class="token punctuation">[</span><span class="token string">&#39;eval_accuracy&#39;</span><span class="token punctuation">]</span> <span class="token keyword">for</span> result <span class="token keyword">in</span> fold_results<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">avg_f1 <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">[</span>result<span class="token punctuation">[</span><span class="token string">&#39;eval_f1&#39;</span><span class="token punctuation">]</span> <span class="token keyword">for</span> result <span class="token keyword">in</span> fold_results<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">avg_precision <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">[</span>result<span class="token punctuation">[</span><span class="token string">&#39;eval_precision&#39;</span><span class="token punctuation">]</span> <span class="token keyword">for</span> result <span class="token keyword">in</span> fold_results<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">avg_recall <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">[</span>result<span class="token punctuation">[</span><span class="token string">&#39;eval_recall&#39;</span><span class="token punctuation">]</span> <span class="token keyword">for</span> result <span class="token keyword">in</span> fold_results<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均准确率: </span><span class="token interpolation"><span class="token punctuation">{</span>avg_accuracy<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均F1分数: </span><span class="token interpolation"><span class="token punctuation">{</span>avg_f1<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均精确率: </span><span class="token interpolation"><span class="token punctuation">{</span>avg_precision<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均召回率: </span><span class="token interpolation"><span class="token punctuation">{</span>avg_recall<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 保存最佳模型</span></span>
<span class="line"><span class="token keyword">if</span> best_fold_model <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n保存最佳模型 (F1: </span><span class="token interpolation"><span class="token punctuation">{</span>best_fold_score<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">)...&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    best_fold_model<span class="token punctuation">.</span>save_pretrained<span class="token punctuation">(</span>saved_model_dir<span class="token punctuation">)</span></span>
<span class="line">    tokenizer<span class="token punctuation">.</span>save_pretrained<span class="token punctuation">(</span>saved_model_dir<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 创建模型配置文件</span></span>
<span class="line">    model_config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;model_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;BERT-base-chinese-YourCharacter&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;base_model&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bert-base-chinese&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;num_labels&quot;</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;k_folds&quot;</span><span class="token punctuation">:</span> k_folds<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;best_fold_score&quot;</span><span class="token punctuation">:</span> best_fold_score<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;average_metrics&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;accuracy&quot;</span><span class="token punctuation">:</span> avg_accuracy<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;f1&quot;</span><span class="token punctuation">:</span> avg_f1<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;precision&quot;</span><span class="token punctuation">:</span> avg_precision<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;recall&quot;</span><span class="token punctuation">:</span> avg_recall</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;fold_results&quot;</span><span class="token punctuation">:</span> fold_results</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>saved_model_dir<span class="token punctuation">}</span></span><span class="token string">/model_config.json&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>model_config<span class="token punctuation">,</span> f<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;模型已保存到: </span><span class="token interpolation"><span class="token punctuation">{</span>saved_model_dir<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;模型名称: BERT-base-chinese-YourCharacter&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;错误：没有找到最佳模型&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-情感标签映射" tabindex="-1"><a class="header-anchor" href="#_3-情感标签映射"><span>3. 情感标签映射</span></a></h3><p>训练完成后，需要确保情感标签映射正确：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">emotion_map <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">&quot;高兴&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">&quot;悲伤&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&quot;愤怒&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&quot;惊讶&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token string">&quot;恐惧&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token number">5</span><span class="token punctuation">:</span> <span class="token string">&quot;厌恶&quot;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">:</span> <span class="token string">&quot;中性&quot;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">:</span> <span class="token string">&quot;害羞&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token string">&quot;兴奋&quot;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">:</span> <span class="token string">&quot;舒适&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">10</span><span class="token punctuation">:</span> <span class="token string">&quot;紧张&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">:</span> <span class="token string">&quot;爱慕&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">:</span> <span class="token string">&quot;委屈&quot;</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">:</span> <span class="token string">&quot;骄傲&quot;</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">:</span> <span class="token string">&quot;困惑&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-模型部署" tabindex="-1"><a class="header-anchor" href="#_4-模型部署"><span>4. 模型部署</span></a></h3><p>训练完成后，将模型文件放置到正确的位置：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">GPT-SoVITS/</span>
<span class="line">├── role/</span>
<span class="line">│   ├── 角色名1/</span>
<span class="line">│   │   ├── BERT/ </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-参考音频收集" tabindex="-1"><a class="header-anchor" href="#_5-参考音频收集"><span>5. 参考音频收集</span></a></h3><p>为每个情感收集对应的参考音频（注意！将参考音频以）：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">GPT-SoVITS/role/角色名1/refAudio/</span>
<span class="line">└── YourCharacter/</span>
<span class="line">    ├── 高兴/</span>
<span class="line">    │   └── 参考音频.wav</span>
<span class="line">    ├── 悲伤/</span>
<span class="line">    │   └── 参考音频.wav</span>
<span class="line">    ├── 愤怒/</span>
<span class="line">    │   └── 参考音频.wav</span>
<span class="line">    └── ... (其他情感)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-训练建议" tabindex="-1"><a class="header-anchor" href="#_6-训练建议"><span>6. 训练建议</span></a></h3><ol><li><strong>数据质量</strong>：确保训练数据质量高，标注准确</li><li><strong>数据平衡</strong>：尽量保持各类情感的样本数量平衡</li><li><strong>数据增强</strong>：使用数据增强技术提高模型泛化能力</li><li><strong>交叉验证</strong>：使用K折交叉验证确保模型稳定性</li><li><strong>超参数调优</strong>：根据实际情况调整学习率、批次大小等参数</li></ol><h3 id="_7-模型评估" tabindex="-1"><a class="header-anchor" href="#_7-模型评估"><span>7. 模型评估</span></a></h3><p>训练完成后，可以通过以下指标评估模型：</p><ul><li><strong>准确率（Accuracy）</strong>：整体分类准确率</li><li><strong>F1分数</strong>：精确率和召回率的调和平均</li><li><strong>精确率（Precision）</strong>：预测为正例中实际为正例的比例</li><li><strong>召回率（Recall）</strong>：实际正例中被正确预测的比例</li></ul><h3 id="_8-集成到tts系统" tabindex="-1"><a class="header-anchor" href="#_8-集成到tts系统"><span>8. 集成到TTS系统</span></a></h3><p>训练完成后，模型会自动被TTS系统加载，用于情感分析和参考音频选择。系统会根据文本内容自动选择合适的情感参考音频进行TTS生成。</p><h2 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理"><span>错误处理</span></a></h2><h3 id="常见问题及解决方案" tabindex="-1"><a class="header-anchor" href="#常见问题及解决方案"><span>常见问题及解决方案</span></a></h3><ol><li><p><strong>API 服务启动失败</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">ModuleNotFoundError: No module named &#39;xxx&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方案</strong>：检查 conda 环境和依赖安装</p></li><li><p><strong>角色配置加载失败</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">FileNotFoundError: 角色配置文件不存在</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方案</strong>：</p><ul><li>检查 <code>role</code> 目录结构</li><li>确认 <code>config.json</code> 格式正确</li><li>验证音频文件路径</li></ul></li><li><p><strong>模型加载失败</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">RuntimeError: CUDA out of memory</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方案</strong>：</p><ul><li>减少批处理大小</li><li>检查 GPU 内存使用情况</li><li>考虑使用 CPU 模式</li></ul></li><li><p><strong>音质不佳</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">合成音频质量较差或失真</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方案</strong>：</p><ul><li>检查参考音频质量</li><li>调整参考文本与音频的匹配度</li><li>考虑训练专用模型</li></ul></li></ol><h2 id="性能优化建议" tabindex="-1"><a class="header-anchor" href="#性能优化建议"><span>性能优化建议</span></a></h2><h3 id="_1-硬件优化" tabindex="-1"><a class="header-anchor" href="#_1-硬件优化"><span>1. 硬件优化</span></a></h3><ul><li><strong>GPU 加速</strong>：使用支持 CUDA 的 GPU 可显著提升合成速度</li><li><strong>内存管理</strong>：确保有足够内存加载模型</li><li><strong>存储优化</strong>：使用 SSD 提高模型加载速度</li></ul><h3 id="_2-模型优化" tabindex="-1"><a class="header-anchor" href="#_2-模型优化"><span>2. 模型优化</span></a></h3><ul><li><strong>模型选择</strong>：根据需求选择合适大小的模型</li><li><strong>缓存策略</strong>：避免重复加载相同模型</li><li><strong>批量处理</strong>：对多个文本进行批量合成</li></ul><h3 id="_3-音频优化" tabindex="-1"><a class="header-anchor" href="#_3-音频优化"><span>3. 音频优化</span></a></h3><ul><li><strong>参考音频质量</strong>：使用高质量参考音频</li><li><strong>文本匹配度</strong>：确保参考文本与音频内容匹配</li><li><strong>长度控制</strong>：合理控制单次合成文本长度</li></ul><h2 id="示例配置" tabindex="-1"><a class="header-anchor" href="#示例配置"><span>示例配置</span></a></h2><h3 id="银狼角色配置示例" tabindex="-1"><a class="header-anchor" href="#银狼角色配置示例"><span>银狼角色配置示例</span></a></h3><p>基于 <a href="https://www.modelscope.cn/models/leletxh/Silver_Wolf_GPT-SoVITS_Model/files" target="_blank" rel="noopener noreferrer">银狼模型V4</a> 与 <a href="https://huggingface.co/FrozenFish/retrained_SilverWolf_Bert/tree/main" target="_blank" rel="noopener noreferrer">银狼文本情感分析模型</a>的配置：</p><p><strong>目录结构</strong>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">role/</span>
<span class="line">└── 银狼/</span>
<span class="line">    ├── config.json</span>
<span class="line">    ├── 银狼.wav #从&quot;replace/role/银狼&quot;中获取</span>
<span class="line">    ├── BERT/ #银狼文本情感分析模型文件</span>
<span class="line">    ├── refAudio/ #从&quot;replace/role/银狼/refAudio中&quot;获取</span>
<span class="line">    ├── 银狼-V4-e30.ckpt</span>
<span class="line">    └── 银狼-V4_e8_s688_l32.pth</span>
<span class="line">    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>config.json</strong>：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;ref_audio&quot;</span><span class="token operator">:</span> <span class="token string">&quot;银狼.wav&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ref_text&quot;</span><span class="token operator">:</span> <span class="token string">&quot;骇入空间站的时候，我随手改了下螺丝咕姆的画像，不过…最后还是改回去了&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;ref_lang&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;gpt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;银狼-V4-e30.ckpt&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;sovits&quot;</span><span class="token operator">:</span> <span class="token string">&quot;银狼-V4_e8_s688_l32.pth&quot;</span></span>
<span class="line">    <span class="token property">&quot;BERTmodel&quot;</span><span class="token operator">:</span> <span class="token string">&quot;BERT/&quot;</span></span>
<span class="line">    <span class="token property">&quot;multiREF&quot;</span><span class="token operator">:</span> <span class="token string">&quot;refAudio/&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ol><li><strong>版权问题</strong>：确保使用的音频素材符合版权规定</li><li><strong>伦理使用</strong>：避免恶意使用语音克隆技术</li><li><strong>模型版权</strong>：遵守模型的使用协议</li><li><strong>资源消耗</strong>：注意 GPU 和内存的使用情况</li><li><strong>网络环境</strong>：确保稳定的网络连接用于模型下载</li></ol><h2 id="故障排查" tabindex="-1"><a class="header-anchor" href="#故障排查"><span>故障排查</span></a></h2><p>如果遇到问题，请按以下步骤排查：</p><ol><li><strong>检查环境配置</strong>：确认 conda 环境和依赖</li><li><strong>验证硬件支持</strong>：检查 GPU 驱动和 CUDA</li><li><strong>确认文件路径</strong>：验证配置文件和模型路径</li><li><strong>查看日志输出</strong>：分析详细错误信息</li><li><strong>测试基础功能</strong>：使用简单配置进行测试</li></ol><h2 id="技术支持" tabindex="-1"><a class="header-anchor" href="#技术支持"><span>技术支持</span></a></h2><ul><li><strong>官方文档</strong>：<a href="https://github.com/RVC-Boss/GPT-SoVITS" target="_blank" rel="noopener noreferrer">GPT-SoVITS GitHub</a></li><li><strong>社区支持</strong>：GPT-SoVITS 官方交流群</li><li><strong>问题反馈</strong>：GitHub Issues</li></ul><p>通过以上配置和使用方法，您可以充分利用 GPT-SoVITS 的强大功能，为您的应用添加高质量的语音合成和语音克隆能力。</p>`,110)]))}const c=s(e,[["render",l]]),u=JSON.parse('{"path":"/deploy-docs/TTS_GPTSoVITS.html","title":"GPT-SoVITS TTS 服务配置指南","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"GPT-SoVITS TTS 服务配置指南","description":"GPT-SoVITS 语音合成服务的配置指南"},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"前置要求","slug":"前置要求","link":"#前置要求","children":[]},{"level":2,"title":"系统要求","slug":"系统要求","link":"#系统要求","children":[{"level":3,"title":"硬件要求","slug":"硬件要求","link":"#硬件要求","children":[]},{"level":3,"title":"云服务器推荐","slug":"云服务器推荐","link":"#云服务器推荐","children":[]}]},{"level":2,"title":"环境变量配置","slug":"环境变量配置","link":"#环境变量配置","children":[{"level":3,"title":"配置示例","slug":"配置示例","link":"#配置示例","children":[]}]},{"level":2,"title":"安装配置","slug":"安装配置","link":"#安装配置","children":[{"level":3,"title":"1. 安装 GPT-SoVITS","slug":"_1-安装-gpt-sovits","link":"#_1-安装-gpt-sovits","children":[]},{"level":3,"title":"2. 启动 API 服务","slug":"_2-启动-api-服务","link":"#_2-启动-api-服务","children":[]}]},{"level":2,"title":"功能特性","slug":"功能特性","link":"#功能特性","children":[{"level":3,"title":"1. 少样本语音克隆","slug":"_1-少样本语音克隆","link":"#_1-少样本语音克隆","children":[]},{"level":3,"title":"2. 自定义模型支持","slug":"_2-自定义模型支持","link":"#_2-自定义模型支持","children":[]},{"level":3,"title":"3. 支持的音频格式","slug":"_3-支持的音频格式","link":"#_3-支持的音频格式","children":[]}]},{"level":2,"title":"角色配置","slug":"角色配置","link":"#角色配置","children":[{"level":3,"title":"1. 目录结构","slug":"_1-目录结构","link":"#_1-目录结构","children":[]},{"level":3,"title":"2. 配置文件格式","slug":"_2-配置文件格式","link":"#_2-配置文件格式","children":[]},{"level":3,"title":"3. 配置参数说明","slug":"_3-配置参数说明","link":"#_3-配置参数说明","children":[]},{"level":3,"title":"4. 参考音频要求","slug":"_4-参考音频要求","link":"#_4-参考音频要求","children":[]}]},{"level":2,"title":"语音合成模型训练（可选）","slug":"语音合成模型训练-可选","link":"#语音合成模型训练-可选","children":[{"level":3,"title":"1. 数据准备","slug":"_1-数据准备","link":"#_1-数据准备","children":[]},{"level":3,"title":"2. 训练流程","slug":"_2-训练流程","link":"#_2-训练流程","children":[]}]},{"level":2,"title":"情感分析模型训练（可选）","slug":"情感分析模型训练-可选","link":"#情感分析模型训练-可选","children":[{"level":3,"title":"1. 准备训练数据","slug":"_1-准备训练数据","link":"#_1-准备训练数据","children":[]},{"level":3,"title":"2. 训练脚本","slug":"_2-训练脚本","link":"#_2-训练脚本","children":[]},{"level":3,"title":"3. 情感标签映射","slug":"_3-情感标签映射","link":"#_3-情感标签映射","children":[]},{"level":3,"title":"4. 模型部署","slug":"_4-模型部署","link":"#_4-模型部署","children":[]},{"level":3,"title":"5. 参考音频收集","slug":"_5-参考音频收集","link":"#_5-参考音频收集","children":[]},{"level":3,"title":"6. 训练建议","slug":"_6-训练建议","link":"#_6-训练建议","children":[]},{"level":3,"title":"7. 模型评估","slug":"_7-模型评估","link":"#_7-模型评估","children":[]},{"level":3,"title":"8. 集成到TTS系统","slug":"_8-集成到tts系统","link":"#_8-集成到tts系统","children":[]}]},{"level":2,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[{"level":3,"title":"常见问题及解决方案","slug":"常见问题及解决方案","link":"#常见问题及解决方案","children":[]}]},{"level":2,"title":"性能优化建议","slug":"性能优化建议","link":"#性能优化建议","children":[{"level":3,"title":"1. 硬件优化","slug":"_1-硬件优化","link":"#_1-硬件优化","children":[]},{"level":3,"title":"2. 模型优化","slug":"_2-模型优化","link":"#_2-模型优化","children":[]},{"level":3,"title":"3. 音频优化","slug":"_3-音频优化","link":"#_3-音频优化","children":[]}]},{"level":2,"title":"示例配置","slug":"示例配置","link":"#示例配置","children":[{"level":3,"title":"银狼角色配置示例","slug":"银狼角色配置示例","link":"#银狼角色配置示例","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"故障排查","slug":"故障排查","link":"#故障排查","children":[]},{"level":2,"title":"技术支持","slug":"技术支持","link":"#技术支持","children":[]}],"git":{"updatedTime":1754373571000,"contributors":[{"name":"2302_76329346","username":"","email":"2302_76329346@noreply.gitcode.com","commits":2},{"name":"FrozenFisher","username":"FrozenFisher","email":"kuw9549@dingtalk.com","commits":1,"url":"https://github.com/FrozenFisher"}],"changelog":[{"hash":"c66e88356a4b72ca4ff37cf659fc1bce857472ed","time":1754373571000,"email":"kuw9549@dingtalk.com","author":"FrozenFisher","message":"更新tts配置指南"},{"hash":"9e7634fdfab34f2e51ac081bc14aae8eff3bb887","time":1754323398000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"更新文档：为多个部署指南添加语言、标题和描述信息"},{"hash":"f9c61434bda4cac85d5b9c782b7743cb86d12af5","time":1754306992000,"email":"2302_76329346@noreply.gitcode.com","author":"2302_76329346","message":"chore: initialize package.json with project metadata and development dependencies"}]},"filePathRelative":"deploy-docs/TTS_GPTSoVITS.md"}');export{c as comp,u as data};
